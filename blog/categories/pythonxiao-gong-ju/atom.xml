<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python小工具 | ksnowlv]]></title>
  <link href="http://ksnowlv.github.io/blog/categories/pythonxiao-gong-ju/atom.xml" rel="self"/>
  <link href="http://ksnowlv.github.io/"/>
  <updated>2019-05-15T20:03:47+08:00</updated>
  <id>http://ksnowlv.github.io/</id>
  <author>
    <name><![CDATA[律威]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[python筛选目录下非jpeg，png，bmp格式的图片]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/05/15/pythonshai-xuan-mu-lu-xia-fei-jpeg%2Cpng%2Cbmpge-shi-de-tu-pian/"/>
    <updated>2019-05-15T20:01:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/05/15/pythonshai-xuan-mu-lu-xia-fei-jpeg,png,bmpge-shi-de-tu-pian</id>
    <content type="html"><![CDATA[<p>```python</p>

<p>import os
import imghdr</p>

<h2>工具功能：筛选目录下非jpeg，png，bmp格式的图片，并输出其路径</h2>

<h2>Python 3.0</h2>

<h1>图片文件夹目录</h1>

<p>IMAGEPATH = None</p>

<h1>初始化</h1>

<p>def init():</p>

<pre><code>global IMAGEPATH
IMAGEPATH  = "/Users/ksnowlv/Documents/image"
</code></pre>

<h1>功能：读取指定目录下的所有文件绝对路径（包括该目录下所有子目录），并以列表形式返回</h1>

<p>def readDir(dirPath):</p>

<pre><code>myDirPath = dirPath
if dirPath.endswith('/'):# 要求传入的路径参数最后不能有斜杠,目的是为了递归时格式统一
    myDirPath = dirPath.rstrip('/')
    print('文件夹路径末尾删除/ = %s'%(myDirPath))

allFiles = []

if os.path.isdir(myDirPath):
    fileList = os.listdir(myDirPath)
    for f in fileList:
        f = myDirPath+'/'+f
        if os.path.isdir(f):
            subFiles = readDir(f)
            allFiles = subFiles + allFiles #合并当前目录与子目录的所有文件路径
        else:
            allFiles.append(f)
    return allFiles
else:
    print('Error,not a dir')
return allFiles
</code></pre>

<h1>根据路径筛选出非目标图片的路径</h1>

<p>def filterPicture(fileList):</p>

<pre><code>for fileName in fileList:
    # data = open(fileName, 'rb').read(20)
    fileType = imghdr.what(fileName)
    # print("filename = %s fileType = %s" % (fileName,fileType))

    if fileType != "jpeg" and fileType != "png" and fileType != "bmp":
        print("filename = %s can not parse fileType = %s " % (fileName, fileType))
</code></pre>

<p>def main():</p>

<pre><code>init()
fileList = readDir(IMAGEPATH)
filterPicture(fileList)
</code></pre>

<p>if <strong>name</strong> == &lsquo;<strong>main</strong>&rsquo;:</p>

<pre><code>main()
</code></pre>

<p>```Python</p>
]]></content>
  </entry>
  
</feed>
