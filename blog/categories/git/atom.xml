<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | ksnowlv]]></title>
  <link href="http://ksnowlv.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://ksnowlv.github.io/"/>
  <updated>2019-05-15T21:04:12+08:00</updated>
  <id>http://ksnowlv.github.io/</id>
  <author>
    <name><![CDATA[律威]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac下支持多个ssh-key]]></title>
    <link href="http://ksnowlv.github.io/blog/2017/11/29/macxia-zhi-chi-duo-ge-ssh-key/"/>
    <updated>2017-11-29T15:38:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2017/11/29/macxia-zhi-chi-duo-ge-ssh-key</id>
    <content type="html"><![CDATA[<p>Mac下如何支持多个ssh-key呢？</p>

<!--more-->


<p>   通过ssh-config文件配置各个ssh-key,避免在mac重启后，每次手动添加ssh-key。</p>

<p>配置文件<code>config</code>如下：</p>

<p>```objective-c</p>

<p>Host            gitee.com
HostName        gitee.com
User            <a href="&#109;&#97;&#105;&#108;&#116;&#x6f;&#x3a;&#107;&#x73;&#110;&#x6f;&#119;&#108;&#x76;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#109;">&#107;&#115;&#x6e;&#111;&#x77;&#108;&#118;&#x40;&#x31;&#54;&#51;&#x2e;&#99;&#111;&#109;</a>
PreferredAuthentications publickey
IdentityFile    ~/.ssh/ksnowlv163</p>

<p>Host            10.103.40.101
HostName        10.103.40.101
User            git
PreferredAuthentications publickey
IdentityFile    ~/.ssh/id_rsa</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git rm]]></title>
    <link href="http://ksnowlv.github.io/blog/2014/07/29/git-rm/"/>
    <updated>2014-07-29T00:27:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2014/07/29/git-rm</id>
    <content type="html"><![CDATA[<p>如何使用git删除相关文件呢？</p>

<!--more-->


<p>  git rm为git删除命令，常用格式如下</p>

<pre><code>  git rm -r &lt;filepath&gt;       #从git和本地文件中删除某个文件或某个文件夹
  git rm   &lt;filename&gt;        #从git和本地文件中删除某个文件
  git rm --cached &lt;filepath&gt; #把文件从git仓库中删除,但，文件仍然保存在当前文件目录中
</code></pre>

<h4>1.删除文件目录a及其目录下的文件a.txt</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git rm -r a
rm 'a/d.txt'
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$ls
a.text b.txt  c.txt
</code></pre>

<h4>2.删除文件c.txt</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git rm c.txt
rm 'c.txt'
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$ls
a
</code></pre>

<h4>3.删除git仓库中的文件目录a及其目录下的文件a.txt，但是本地目录中仍然保留。</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git rm -r --cache a
rm 'a/a.txt'
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git status
On branch master
Changes to be committed:
(use "git reset HEAD &lt;file&gt;..." to unstage)

deleted:    b.txt

Untracked files:
(use "git add &lt;file&gt;..." to include in what will be committed)
a/
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git stash]]></title>
    <link href="http://ksnowlv.github.io/blog/2014/07/29/git-stash/"/>
    <updated>2014-07-29T00:14:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2014/07/29/git-stash</id>
    <content type="html"><![CDATA[<p>如何使用git stash(暂存)命令呢？</p>

<!--more-->


<h4>查看git stash相关命令：在mac terminal输入<code>git help stash</code></h4>

<pre><code>git stash list                    #显示出所有的暫存清单
git stash show                    #显示所暂存的一些修改 
git stash drop stash@{number}     #丢弃暂存的修改
git stash stash@{number}          #取出某一次的暫存修改
git stash branch &lt;branchname&gt;     #暂存到某一分支
git stash [save [-p|--patch] [-k|--[no-]keep-index] [-q|--quiet]
                [-u|--include-untracked] [-a|--all] [&lt;message&gt;]]
                                  #暂存修改
git stash clear                   #清除所有暂存
git stash create [&lt;message&gt;]      #创建暂存信息
git stash store [-m|--message &lt;message&gt;] [-q|--quiet] &lt;commit&gt;
</code></pre>

<p>示例如下：</p>

<h4>创建c.txt文件，并暂存，暂存信息为“add c.txt”</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$vim c.txt
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git add .
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash save "add c.txt"
Saved working directory and index state On master: add c.txt
HEAD is now at 5636eac add new file
</code></pre>

<h4>显示暂存列表信息</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash list
stash@{0}: On master: add c.txt
stash@{1}: On master: mm
stash@{2}: WIP on master: 5636eac add new file
</code></pre>

<h4>显示最近一次暂存的一些修改</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash show
 c.txt | 1 +
 1 file changed, 1 insertion(+)
</code></pre>

<h4>把stash@{2}的暂停版本更新到本地版本</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash apply stash@{2} 
On branch master
Changes to be committed:
  (use "git reset HEAD &lt;file&gt;..." to unstage)

new file:   b.txt
</code></pre>

<h4>丢弃stash@{2}的暂停版本</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash drop stash@{2}
Dropped stash@{2} (b6aaa50f4b36fb264b677bc4b35e51bf0601a3c0)
</code></pre>

<h4>显示最新的暂存列表信息</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash list
stash@{0}: On master: add c.txt
stash@{1}: On master: mm
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$
</code></pre>

<h4>把stash@{1}，stash@{0}暂存版本恢复到本地</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash apply stash@{1}
On branch master
Changes to be committed:
  (use "git reset HEAD &lt;file&gt;..." to unstage)

new file:   b.txt

ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash apply stash@{0}
On branch master
Changes to be committed:
  (use "git reset HEAD &lt;file&gt;..." to unstage)

new file:   b.txt
new file:   c.txt
</code></pre>

<h4>观察是不是先前暂停版本的文件</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$ls
a.text b.txt  c.txt
</code></pre>

<h4>显示暂存列表信息</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash list
stash@{0}: On master: add c.txt
stash@{1}: On master: mm
</code></pre>

<h4>清除暂存列表信息</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash clear
#暂存列表已经被清空
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git stash list
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git revert]]></title>
    <link href="http://ksnowlv.github.io/blog/2014/07/29/git-revert/"/>
    <updated>2014-07-29T00:14:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2014/07/29/git-revert</id>
    <content type="html"><![CDATA[<p>如何使用git的撤消操作呢？</p>

<!--more-->


<h4><code>git revert</code>撤销某次操作，此次操作之前的commit都会被保留。</h4>

<p>因此revert 只會使commit继续往前,优点是可以针对某個 commit 進行还原 并且留下还原记录</p>

<pre><code>git revert -n &lt;commit id&gt;     #撤销某次操作，commit id为提交号
git revert -n HEAD~&lt;number&gt;   #撤销某个版本，number为向前数的版本号。 
</code></pre>

<h4><code>git reset</code> 是撤销某次提交，但是此次之后的修改都会被退回到暂存区。</h4>

<h4>1.撤销到某一个提交号的版本。</h4>

<pre><code>git revert -n 08a94d26db3e7678d615625eb6c839729a21ac3f
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git status
On branch master
You are currently reverting commit 08a94d2.
  (all conflicts fixed: run "git revert --continue")
  (use "git revert --abort" to cancel the revert operation)

Changes to be committed:
  (use "git reset HEAD &lt;file&gt;..." to unstage)

deleted:    1.txt

ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$
</code></pre>

<h4>2.撤销到某个版本。</h4>

<pre><code>ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git revert -n HEAD~2
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$ls
a     a.txt
ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$git status
On branch master
You are currently reverting commit d5527c7.
  (all conflicts fixed: run "git revert --continue")
  (use "git revert --abort" to cancel the revert operation)

Changes to be committed:
  (use "git reset HEAD &lt;file&gt;..." to unstage)

deleted:    1.txt
new file:   a.txt
new file:   a/a.txt

ksnowlv@ksnowlvdeMacBook-Pro~/Music/gittest$
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git reset]]></title>
    <link href="http://ksnowlv.github.io/blog/2014/07/27/git-reset/"/>
    <updated>2014-07-27T19:41:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2014/07/27/git-reset</id>
    <content type="html"><![CDATA[<p>git reset有三种撤消方式</p>

<!--more-->


<p>如下：</p>

<h4>1.git reset &mdash;mixed：</h4>

<pre><code>此为默认方式，不带任何参数的git reset，即时这种方式，它回退到某个版本，只保留源码，回退commit和index信息git 
   也就是说：取消了commit ，取消了add
</code></pre>

<h4>2.reset &mdash;soft  HEAD～number</h4>

<pre><code>回退到某个版本，只回退了commit的信息，不会恢复到index file一级。如果还要提交，直接commit即可
也就是说取消了commit
</code></pre>

<h4>3.git reset &mdash;hard <version></h4>

<pre><code>彻底回退到某个版本，本地的源码也会变为该版本的内容。
也就是说取消了commit ，取消了add，取消源文件修改
</code></pre>

<h4>说明：<code>--soft</code>和<code>--hard</code>后面为版本号</h4>

<p><code>HEAD~number</code>：<code>number</code>表示倒数第number次的提交结果</p>

<p><code>&lt;version&gt;</code>:可以通过<code>git log</code>获取，参见下面的样例。</p>

<h3>样例如下：</h3>

<h4>1.撤消add:撤消提交到暂存区的文件</h4>

<p>先添加一个文件</p>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ vim b.text
ksnowlvdeMacBook-Pro:gittest ksnowlv$ git add .
</code></pre>

<p>查看当前git状态</p>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD &lt;file&gt;..." to unstage)

new file:   b.text
</code></pre>

<p>使用<code>git reset</code>或<code>git reset b.text</code>撤消</p>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ git reset
</code></pre>

<p>此时查看git状态</p>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ git status
On branch master
Untracked files:
  (use "git add &lt;file&gt;..." to include in what will be committed)

    b.text

nothing added to commit but untracked files present (use "git add" to track)
</code></pre>

<h4>2.撤消commit:撤消commit到本地版本库的文件</h4>

<p>先创建并添加c.txt文件</p>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ vim c.txt
ksnowlvdeMacBook-Pro:gittest ksnowlv$ git add c.txt
ksnowlvdeMacBook-Pro:gittest ksnowlv$ git commit -a -m "add c.txt"
[master 66b155f] add c.txt
 1 file changed, 1 insertion(+)
 create mode 100644 c.txt
</code></pre>

<p>使用git log查看提交日志</p>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ git log
commit 66b155f5f76ae0b48129638d082432fa2fcd62c8
Author: xxxx
Date:   Sun Jul 27 20:10:04 2014 +0800

add c.txt

commit 5320bdfd1d64f24fdcc2a9edbd056e56fbbf13b7
Author:  xxxx
Date:   Sun Jul 27 19:31:22 2014 +0800

add b.text

commit 5636eace1f76c6fa548cb126324f9ec8ad8a4f04
Author: xxxx
Date:   Sun Jul 27 19:21:48 2014 +0800

add new file
</code></pre>

<p> 撤消commit操作</p>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ git reset --hard 5636eace1f76c6fa548cb126324f9ec8ad8a4f04
HEAD is now at 5636eac add new file
</code></pre>

<p>本地回退到该版本，如果想远程分支也回退到该版本，再强制推送到远程分支即可，</p>

<pre><code>git push -f origin master
</code></pre>

<h4>3.将本地的状态回退到和远程的一样</h4>

<p> 先将本地文件b.text修改下，观察是否回退到的远程.</p>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ vim b.text 
ksnowlvdeMacBook-Pro:gittest ksnowlv$ git reset --hard origin/master
HEAD is now at 804b9f4 modify b
</code></pre>

<p>b.text是和远程的相同的</p>

<h4>4.使用<code>HEAD~number</code>撤消</h4>

<pre><code>ksnowlvdeMacBook-Pro:gittest ksnowlv$ git reset --hard HEAD~1
HEAD is now at 5636eac add new file
ksnowlvdeMacBook-Pro:gittest ksnowlv$ ls
a.text
</code></pre>

<p>再强制推送到远程分支，即回到了想回的状态。</p>

<pre><code>git push -f origin master
</code></pre>
]]></content>
  </entry>
  
</feed>
