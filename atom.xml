<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ksnowlv]]></title>
  <link href="http://ksnowlv.github.io/atom.xml" rel="self"/>
  <link href="http://ksnowlv.github.io/"/>
  <updated>2020-11-05T20:11:37+08:00</updated>
  <id>http://ksnowlv.github.io/</id>
  <author>
    <name><![CDATA[律威]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac安装Maven]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/11/29/macan-zhuang-maven/"/>
    <updated>2019-11-29T14:03:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/11/29/macan-zhuang-maven</id>
    <content type="html"><![CDATA[<h4>一.下载<a href="http://ftp.wayne.edu/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz">apache-maven-3.6.3</a>见：<a href="http://maven.apache.org/download.cgi">Maven官网</a></h4>

<p>把<code>apache-maven-3.6.3</code>放置到<code>/Users/用户名/</code>目录下</p>

<h4>二.配置环境变量</h4>

<p>打开<code>.bash_profile</code>文件，配置如下：</p>

<pre><code>export MAVENDIR=/Users/ksnowlv/apache-maven-3.6.3
export PATH=$PATH:$MAVENDIR/bin:$PATH
</code></pre>

<p>使用source ~/.bash_profile命令使环境变量生效</p>

<h3>三.测试是否安装成功</h3>

<p>使用<code>mvn -v</code>命名测试</p>

<h5>1.若成功输出如下内容</h5>

<pre><code>ksnowlvdeMacBook-Pro:QUICTest ksnowlv$ mvn -version
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)
Maven home: /Users/ksnowlv/apache-maven-3.6.3
Java version: 12, vendor: Oracle Corporation, runtime: /Library/Java/   JavaVirtualMachines/jdk-12.jdk/Contents/Home
Default locale: zh_CN_#Hans, platform encoding: UTF-8
OS name: "mac os x", version: "10.15", arch: "x86_64", family: "mac"
</code></pre>

<h5>2.若失败，如下内容，更新下JAVA_HOME目录即可。</h5>

<pre><code>The JAVA_HOME environment variable is not defined correctly
This environment variable is needed to run this program
NB: JAVA_HOME should point to a JDK not a JRE
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS视频播放AVPlayerViewController]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/11/28/iosshi-pin-bo-fang-avplayerviewcontroller/"/>
    <updated>2019-11-28T10:31:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/11/28/iosshi-pin-bo-fang-avplayerviewcontroller</id>
    <content type="html"><![CDATA[<p>AVPlayerViewController播放视频分两种形式</p>

<ul>
<li>内嵌视图的形式显示</li>
<li>模态视图的形式显示</li>
</ul>


<h4>一.初始化AVPlayerViewController</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="n">func</span> <span class="n">loadPlayer</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">movieUrl</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;zh-zhfanti-en&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;m4v&quot;</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">player</span> <span class="o">=</span> <span class="n">AVPlayer</span><span class="p">(</span><span class="nl">url:</span> <span class="n">URL</span><span class="p">(</span><span class="nl">fileURLWithPath:</span> <span class="n">movieUrl</span><span class="p">))</span>
</span><span class='line'>        <span class="n">playerViewController</span> <span class="o">=</span> <span class="n">AVPlayerViewController</span><span class="p">()</span>
</span><span class='line'>        <span class="n">playerViewController</span><span class="o">!</span><span class="p">.</span><span class="n">player</span> <span class="o">=</span> <span class="n">player</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h4>二.内嵌视图的形式显示</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">handlePlayInViewEvent</span><span class="p">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">loadPlayer</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="p">(</span><span class="n">playerViewController</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">containerView</span><span class="o">?</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">playerViewController</span><span class="o">!</span><span class="p">.</span><span class="n">view</span><span class="p">)</span>
</span><span class='line'>        <span class="n">playerViewController</span><span class="o">?</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">containerView</span><span class="o">!</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">addChild</span><span class="p">(</span><span class="n">playerViewController</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>        <span class="n">playerViewController</span><span class="o">?</span><span class="p">.</span><span class="n">player</span><span class="o">?</span><span class="p">.</span><span class="n">play</span><span class="p">()</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>效果图如下：</p>

<p>点击<code>AVPlayerViewController</code>可以全屏播放</p>

<h4>三.模态视图的形式显示</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">handlePlayWithModelViewEvent</span><span class="p">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">loadPlayer</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">guard</span> <span class="p">(</span><span class="n">playerViewController</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">present</span><span class="p">(</span><span class="n">playerViewController</span><span class="o">!</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">)</span> <span class="p">{</span> <span class="p">[</span><span class="n">weak</span> <span class="n">self</span><span class="p">]</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">self</span> <span class="o">=</span> <span class="n">self</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">playerViewController</span><span class="o">?</span><span class="p">.</span><span class="n">player</span><span class="o">?</span><span class="p">.</span><span class="n">play</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果图如下：</p>

<h3>四.停止视频播放</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">handleStopPlayEvent</span><span class="p">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="o">?</span> <span class="p">){</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">playerViewController</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">((</span><span class="n">playerViewController</span><span class="o">?</span><span class="p">.</span><span class="n">parent</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">playerViewController</span><span class="o">?</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">removeFromSuperview</span><span class="p">()</span>
</span><span class='line'>            <span class="n">playerViewController</span><span class="o">?</span><span class="p">.</span><span class="n">removeFromParent</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">playerViewController</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="o">&amp;&amp;</span> <span class="n">playerViewController</span><span class="o">!</span><span class="p">.</span><span class="n">isModalInPresentation</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">playerViewController</span><span class="o">?</span><span class="p">.</span><span class="n">dismiss</span><span class="p">(</span><span class="nl">animated:</span> <span class="p">(</span><span class="n">sender</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="o">?</span> <span class="nl">true:</span><span class="n">false</span><span class="p">),</span> <span class="nl">completion:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">playerViewController</span><span class="o">?</span><span class="p">.</span><span class="n">player</span><span class="o">?</span><span class="p">.</span><span class="n">pause</span><span class="p">()</span>
</span><span class='line'>        <span class="n">playerViewController</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS视频播放-AVPlayer和AVPlayerLayer]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/11/26/iosshi-pin-bo-fang-avplayer/"/>
    <updated>2019-11-26T17:13:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/11/26/iosshi-pin-bo-fang-avplayer</id>
    <content type="html"><![CDATA[<p>本文计划使用<code>AVPlayer</code>和<code>AVPlayerLayer</code>播放视频格式</p>

<ul>
<li>m4v:MP4的特殊类型，MP4格式的高清；可包含字幕</li>
<li>mp4：音频、视频信息的压缩编码标准。</li>
<li>srt：字幕文件格式</li>
</ul>


<h4>一.播放m4v格式</h4>

<p>可通过MP4格式的文件+字幕文件合成m4v格式，可用<a href="https://www.macupdate.com/app/mac/31647/subler">Subler</a>工具合成</p>

<p><img src="http://ksnowlv.github.io/images/post/2019-11-26-iosshi-pin-bo-fang-avplayer/Subler.jpg" alt="image" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="n">func</span> <span class="nf">playMovieFromLocalFile</span><span class="p">(</span><span class="nl">fileFullName:</span> <span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">FileManager</span><span class="p">.</span><span class="k">default</span><span class="p">.</span><span class="n">fileExists</span><span class="p">(</span><span class="nl">atPath:</span> <span class="n">fileFullName</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">debugPrint</span><span class="p">(</span><span class="s">&quot;\(fileFullName) not Found&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//加载视频文件资源（包括视频与所有字幕）</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">asset</span> <span class="o">=</span> <span class="n">AVAsset</span><span class="p">(</span><span class="nl">url:</span> <span class="n">URL</span><span class="p">(</span><span class="nl">fileURLWithPath:</span> <span class="n">fileFullName</span><span class="p">))</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">playerItem</span> <span class="o">=</span> <span class="n">AVPlayerItem</span><span class="p">(</span><span class="nl">asset:</span> <span class="n">asset</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//视频文件中所有支持的字幕</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">characteristic</span> <span class="k">in</span> <span class="n">asset</span><span class="p">.</span><span class="n">availableMediaCharacteristicsWithMediaSelectionOptions</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">debugPrint</span><span class="p">(</span><span class="s">&quot;\(characteristic)&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="n">let</span> <span class="n">group</span> <span class="o">=</span> <span class="n">asset</span><span class="p">.</span><span class="n">mediaSelectionGroup</span><span class="p">(</span><span class="nl">forMediaCharacteristic:</span> <span class="n">characteristic</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">for</span> <span class="n">option</span> <span class="k">in</span> <span class="n">group</span><span class="p">.</span><span class="n">options</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">debugPrint</span><span class="p">(</span><span class="s">&quot;  Option: \(option.displayName)&quot;</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">group</span> <span class="o">=</span> <span class="n">asset</span><span class="p">.</span><span class="n">mediaSelectionGroup</span><span class="p">(</span><span class="nl">forMediaCharacteristic:</span> <span class="n">AVMediaCharacteristic</span><span class="p">.</span><span class="n">legible</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">let</span> <span class="n">locale</span> <span class="o">=</span> <span class="n">Locale</span><span class="p">(</span><span class="nl">identifier:</span> <span class="s">&quot;zh&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">options</span> <span class="o">=</span>
</span><span class='line'>                <span class="n">AVMediaSelectionGroup</span><span class="p">.</span><span class="n">mediaSelectionOptions</span><span class="p">(</span><span class="nl">from:</span> <span class="n">group</span><span class="p">.</span><span class="n">options</span><span class="p">,</span> <span class="nl">with:</span> <span class="n">locale</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">let</span> <span class="n">option</span> <span class="o">=</span> <span class="n">options</span><span class="p">.</span><span class="n">first</span> <span class="p">{</span>
</span><span class='line'>                <span class="c1">// 如果支持中文，默认选中中文字幕</span>
</span><span class='line'>                <span class="n">playerItem</span><span class="p">.</span><span class="n">select</span><span class="p">(</span><span class="n">option</span><span class="p">,</span> <span class="k">in</span><span class="o">:</span> <span class="n">group</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">player</span> <span class="o">=</span> <span class="n">AVPlayer</span><span class="p">(</span><span class="nl">playerItem:</span> <span class="n">playerItem</span><span class="p">)</span>
</span><span class='line'>        <span class="n">player</span><span class="o">?</span><span class="p">.</span><span class="n">appliesMediaSelectionCriteriaAutomatically</span> <span class="o">=</span> <span class="n">false</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">playerLayer</span> <span class="o">==</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">playerLayer</span> <span class="o">=</span> <span class="n">AVPlayerLayer</span><span class="p">(</span><span class="nl">player:</span> <span class="n">player</span><span class="p">)</span>
</span><span class='line'>            <span class="n">playerLayer</span><span class="o">?</span><span class="p">.</span><span class="n">videoGravity</span> <span class="o">=</span> <span class="n">AVLayerVideoGravity</span><span class="p">.</span><span class="n">resizeAspectFill</span>
</span><span class='line'>            <span class="n">playerContainerView</span><span class="o">?</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">addSublayer</span><span class="p">(</span><span class="n">playerLayer</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">setupPlayerObserverEvent</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidAppear</span><span class="p">(</span><span class="n">_</span> <span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">playerLayer</span><span class="o">?</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">playerContainerView</span><span class="o">!</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>效果图如下：</p>

<p><img src="http://ksnowlv.github.io/images/post/2019-11-26-iosshi-pin-bo-fang-avplayer/overview_1.png" alt="image" /></p>

<h4>二.播放mp4格式带srt字幕</h4>

<p><code>mp4</code>文件和字幕<code>srt</code>文件通过时间軕实现当前播放进度展示相应文本。
srt格式解析可参考<a href="https://github.com/mhergon/AVPlayerViewController-Subtitles">AVPlayerViewController-Subtitles</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">playMovie</span><span class="p">(</span><span class="nl">movieFile:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">captionFile:</span> <span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">fileManage</span> <span class="o">=</span> <span class="n">FileManager</span><span class="p">.</span><span class="k">default</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">fileManage</span><span class="p">.</span><span class="n">fileExists</span><span class="p">(</span><span class="nl">atPath:</span> <span class="n">movieFile</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">fileManage</span><span class="p">.</span><span class="n">fileExists</span><span class="p">(</span><span class="nl">atPath:</span> <span class="n">captionFile</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">debugPrint</span><span class="p">(</span><span class="s">&quot;movie:\(movieFile)/ or captionFile:\(captionFile)not found&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//加载视频文件</span>
</span><span class='line'>        <span class="n">player</span> <span class="o">=</span>  <span class="n">AVPlayer</span><span class="p">(</span><span class="nl">url:</span> <span class="n">URL</span><span class="p">(</span><span class="nl">fileURLWithPath:</span> <span class="n">movieFile</span><span class="p">))</span>
</span><span class='line'>        <span class="c1">//加载视频文件对应字幕文件</span>
</span><span class='line'>        <span class="n">parser</span> <span class="o">=</span> <span class="n">Subtitles</span><span class="p">(</span><span class="nl">file:</span> <span class="n">URL</span><span class="p">(</span><span class="nl">fileURLWithPath:</span> <span class="n">captionFile</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//创建AVPlayerLayer并加入到视图层中</span>
</span><span class='line'>        <span class="n">playerLayer</span> <span class="o">=</span> <span class="n">AVPlayerLayer</span><span class="p">(</span><span class="nl">player:</span> <span class="n">player</span><span class="p">)</span>
</span><span class='line'>        <span class="n">playerLayer</span><span class="o">!</span><span class="p">.</span><span class="n">videoGravity</span> <span class="o">=</span> <span class="n">AVLayerVideoGravity</span><span class="p">.</span><span class="n">resizeAspectFill</span>
</span><span class='line'>        <span class="n">playerContainerView</span><span class="o">?</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">addSublayer</span><span class="p">(</span><span class="n">playerLayer</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>        <span class="n">setupPlayerObserverEvent</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>  效果图如下：</p>

<p><img src="http://ksnowlv.github.io/images/post/2019-11-26-iosshi-pin-bo-fang-avplayer/overview_2.png" alt="image" /></p>

<h4>三.两种方式需要手动播放或暂停</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">handleStartPlayerEvent</span><span class="p">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">isPlaying</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">player</span><span class="o">?</span><span class="p">.</span><span class="n">play</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">handlePausePlayerEvent</span><span class="p">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">isPlaying</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">player</span><span class="o">?</span><span class="p">.</span><span class="n">pause</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>详细参考<a href="https://github.com/ksnowlv/MoviePlayerTest">源代码</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCode使用PMD扫描重复代码（一）]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/08/19/xcodeshi-yong-pmdsao-miao-zhong-fu-dai-ma/"/>
    <updated>2019-08-19T15:39:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/08/19/xcodeshi-yong-pmdsao-miao-zhong-fu-dai-ma</id>
    <content type="html"><![CDATA[<p>如何使用PMD在Xcode下扫描重复代码（Copy&amp;Past）呢？</p>

<h3>1.下载PMD：<a href="https://pmd.github.io">https://pmd.github.io</a>，放置到工程主目录下面。</h3>

<p><img src="http://ksnowlv.github.io/images/post/2019-08-19-xcodeshi-yong-pmdsao-miao-zhong-fu-dai-ma/1.png" alt="image" /></p>

<h3>2.Xcode中检测脚本配置</h3>

<h4>1.在<code>Xcode</code>的 <code>Build Phases</code> 中，我们增加一个新的 <code>Run Script</code>，脚本内容如下：</h4>

<pre><code>#检测swift代码
#pmd cpd --files ${EXECUTABLE_NAME} --minimum-tokens 50 --language swift --encoding UTF-8 --format net.sourceforge.pmd.cpd.XMLRenderer &gt; cpd-output.xml --failOnViolation true

#检测objective-c代码
pmd cpd --files ${EXECUTABLE_NAME} --minimum-tokens 20 --language objectivec --encoding UTF-8 --format net.sourceforge.pmd.cpd.XMLRenderer &gt; cpd-output.xml --failOnViolation true

# Running script
php ./cpd_script.php -cpd-xml cpd-output.xml
</code></pre>

<h4>2.在工程主目录下，创建cpd_script.php文件</h4>

<p>！！！需要安装好php</p>

<pre><code>&lt;?php
foreach (simplexml_load_file('cpd-output.xml')-&gt;duplication as $duplication) {
    $files = $duplication-&gt;xpath('file');
    foreach ($files as $file) {
        echo $file['path'].':'.$file['line'].':1: warning: '.$duplication['lines'].' copy-pasted lines from: '
            .implode(', ', array_map(function ($otherFile) { return $otherFile['path'].':'.$otherFile['line']; },
            array_filter($files, function ($f) use (&amp;$file) { return $f != $file; }))).PHP_EOL;
    }
}
?&gt;
</code></pre>

<p><img src="http://ksnowlv.github.io/images/post/2019-08-19-xcodeshi-yong-pmdsao-miao-zhong-fu-dai-ma/2.jpg" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[flutter创建工程报错:Cannot create a project within the Flutter SDK. Target directory 'x' is within the Flutter SDK at'/Users/x/Music/flutter/flutter']]></title>
    <link href="http://ksnowlv.github.io/blog/2019/05/22/flutter-cannot-create-a-project-within-the-flutter-sdk/"/>
    <updated>2019-05-22T11:13:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/05/22/flutter-cannot-create-a-project-within-the-flutter-sdk</id>
    <content type="html"><![CDATA[<p>在使用 <code>flutter create</code>命令创建<code>flutter</code>工程时，如果报<code>Cannot create a project within the Flutter SDK. Target directory '/Users/ksnowlv/Music/flutter/flutter/my_app' is within the Flutter SDK at
'/Users/ksnowlv/Music/flutter/flutter'的错误，</code>注意不要在<code>flutter SDK</code>目录及子目录下创建工程，可考虑在其它目录下创建工程。例如平级目录</p>

<pre><code>ksnowlvdeMacBook-Pro:flutter ksnowlv$ ./flutter/bin/flutter create my_app
Creating project my_app...
  my_app/ios/Runner.xcworkspace/contents.xcworkspacedata (created)
  my_app/ios/Runner/Info.plist (created)
  my_app/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png (created)
  my_app/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png (created)
  my_app/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md (created)
  my_app/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json (created)
  my_app/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png (created)
  my_app/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png (created)
  my_app/ios/Runner/Base.lproj/LaunchScreen.storyboard (created)
  my_app/ios/Runner/Base.lproj/Main.storyboard (created)
  my_app/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata (created)
  my_app/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme (created)
  my_app/ios/Flutter/Debug.xcconfig (created)
  my_app/ios/Flutter/Release.xcconfig (created)
  my_app/ios/Flutter/AppFrameworkInfo.plist (created)
  my_app/test/widget_test.dart (created)
  my_app/my_app.iml (created)
  my_app/.gitignore (created)
  my_app/.metadata (created)
  my_app/ios/Runner/AppDelegate.h (created)
  my_app/ios/Runner/main.m (created)
  my_app/ios/Runner/AppDelegate.m (created)
  my_app/ios/Runner.xcodeproj/project.pbxproj (created)
  my_app/android/app/src/profile/AndroidManifest.xml (created)
  my_app/android/app/src/main/res/mipmap-mdpi/ic_launcher.png (created)
  my_app/android/app/src/main/res/mipmap-hdpi/ic_launcher.png (created)
  my_app/android/app/src/main/res/drawable/launch_background.xml (created)
  my_app/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png (created)
  my_app/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png (created)
  my_app/android/app/src/main/res/values/styles.xml (created)
  my_app/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png (created)
  my_app/android/app/src/main/AndroidManifest.xml (created)
  my_app/android/app/src/debug/AndroidManifest.xml (created)
  my_app/android/gradle/wrapper/gradle-wrapper.properties (created)
  my_app/android/gradle.properties (created)
  my_app/android/settings.gradle (created)
  my_app/pubspec.yaml (created)
  my_app/README.md (created)
  my_app/lib/main.dart (created)
  my_app/android/app/build.gradle (created)
  my_app/android/app/src/main/java/com/example/my_app/MainActivity.java (created)
  my_app/android/build.gradle (created)
  my_app/android/my_app_android.iml (created)
  my_app/.idea/runConfigurations/main_dart.xml (created)
  my_app/.idea/libraries/Flutter_for_Android.xml (created)
  my_app/.idea/libraries/Dart_SDK.xml (created)
  my_app/.idea/libraries/KotlinJavaRuntime.xml (created)
  my_app/.idea/modules.xml (created)
  my_app/.idea/workspace.xml (created)
Running "flutter packages get" in my_app...                         5.7s
Wrote 66 files.

All done!
[✓] Flutter is fully installed. (Channel dev, v1.6.0, on Mac OS X 10.14.4 18E226, locale zh-Hans-CN)
[!] Android toolchain - develop for Android devices is partially installed; more components are available. (Android SDK version 28.0.3)
[!] iOS toolchain - develop for iOS devices is partially installed; more components are available. (Xcode 10.2.1)
[!] Android Studio is partially installed; more components are available. (version 3.4)
[!] Connected device is not available.

Run "flutter doctor" for information about installing additional components.

In order to run your application, type:

  $ cd my_app
  $ flutter run

Your application code is in my_app/lib/main.dart.

ksnowlvdeMacBook-Pro:flutter ksnowlv$ 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[flutter安装和运行]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/05/22/flutteran-zhuang-he-yun-xing/"/>
    <updated>2019-05-22T11:10:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/05/22/flutteran-zhuang-he-yun-xing</id>
    <content type="html"><![CDATA[<h3>1.创建flutter工程目录（各项目+flutter目录），在flutter 目录下载flutter SDK</h3>

<pre><code>git init
git clone -b dev https://github.com/flutter/flutter.git
</code></pre>

<h3>2.进入flutter SDK目录即flutter禁用通过 Google Analytics 发送数据</h3>

<pre><code>cd flutter
./bin/flutter config --no-analytics
</code></pre>

<p>禁用通过 Google Analytics 发送相关数据，以免国内网络连接失败问题。</p>

<h3>3.检查flutter安装情况：flutter doctor</h3>

<pre><code>ksnowlvdeMacBook-Pro:flutter ksnowlv$ ./bin/flutter doctor
Downloading Material fonts...                                       0.7s
Downloading android-arm-profile/darwin-x64 tools...                 1.3s
Downloading android-arm-release/darwin-x64 tools...                 1.2s
Downloading android-arm64-profile/darwin-x64 tools...               1.4s
Downloading android-arm64-release/darwin-x64 tools...               1.4s
Downloading android-x86 tools...                                    6.6s
Downloading android-x64 tools...                                    6.8s
Downloading android-arm tools...                                    3.1s
Downloading android-arm-profile tools...                            2.0s
Downloading android-arm-release tools...                            1.5s
Downloading android-arm64 tools...                                  3.2s
Downloading android-arm64-profile tools...                          2.1s
Downloading android-arm64-release tools...                          1.5s
Downloading ios tools...                                           16.0s
Downloading ios-profile tools...                                   11.7s
Downloading ios-release tools...                                    8.9s
Downloading Gradle Wrapper...                                       0.3s
Downloading package sky_engine...                                   1.1s
Downloading common tools...                                         4.2s
Downloading common tools...                                         4.1s
Downloading darwin-x64 tools...                                    14.0s
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel dev, v1.6.0, on Mac OS X 10.14.4 18E226, locale zh-Hans-CN)
[!] Android toolchain - develop for Android devices (Android SDK version 28.0.3)
    ✗ Android license status unknown.
      Try re-installing or updating your Android SDK Manager.
      See https://developer.android.com/studio/#downloads or visit https://flutter.dev/setup/#android-setup for detailed instructions.
[!] iOS toolchain - develop for iOS devices
    ✗ Xcode installation is incomplete; a full installation is necessary for iOS development.
      Download at: https://developer.apple.com/xcode/download/
      Or install Xcode via the App Store.
      Once installed, run:
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
    ✗ libimobiledevice and ideviceinstaller are not installed. To install with Brew, run:
        brew update
        brew install --HEAD usbmuxd
        brew link usbmuxd
        brew install --HEAD libimobiledevice
        brew install ideviceinstaller
    ✗ ios-deploy not installed. To install:
        brew install ios-deploy
[!] Android Studio (version 3.4)
    ✗ Flutter plugin not installed; this adds Flutter specific functionality.
    ✗ Dart plugin not installed; this adds Dart specific functionality.
[!] Connected device
    ! No devices available

! Doctor found issues in 4 categories.
</code></pre>

<h3>4.安装XCode和打开iOS模拟器</h3>

<ul>
<li><p>安装XCode</p>

<ul>
<li><p>我机器安装的XCode版本是10.2.1，比较新了。如果安装的版本较老，可以更新下</p>

<pre><code>  ksnowlvdeMacBook-Pro:flutter ksnowlv$ sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
          Password:
</code></pre></li>
</ul>
</li>
<li><p>打开模拟器</p>

<ul>
<li>在Mac机器上，可以通过    <code>open -a Simulator</code></li>
</ul>
</li>
</ul>


<h3>5.创建工程</h3>

<p>使用<code>flutter create 项目名称</code>创建项目</p>

<pre><code>在使用 flutter create命令创建flutter工程时，如果报Cannot create a project within the Flutter SDK. Target directory '/Users/ksnowlv/Music/flutter/flutter/my_app' is within the Flutter SDK at '/Users/ksnowlv/Music/flutter/flutter'的错误，注意不要在flutter SDK目录及子目录下创建工程，可考虑在其它目录下创建工程。例如平级目录
</code></pre>

<h3>6.运行工程</h3>

<p> 使用flutter run运行app，</p>

<pre><code>../flutter/bin/flutter run
</code></pre>

<p><img src="http://ksnowlv.github.io/images/post/2019-05-22-flutteran-zhuang-he-yun-xing/flutter-run_cmd.png" alt="image" /></p>

<p><img src="http://ksnowlv.github.io/images/post/2019-05-22-flutteran-zhuang-he-yun-xing/flutter-run_iOS.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift泛型]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/05/16/swiftfan-xing/"/>
    <updated>2019-05-16T19:53:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/05/16/swiftfan-xing</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">/// 交换两个对象的值</span>
</span><span class='line'><span class="c1">///</span>
</span><span class='line'><span class="c1">/// - Parameters:</span>
</span><span class='line'><span class="c1">///   - aValue: 对象a</span>
</span><span class='line'><span class="c1">///   - bValue: 对象b</span>
</span><span class='line'><span class="n">func</span> <span class="n">swapValues</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">aValue:</span> <span class="n">inout</span> <span class="n">T</span><span class="p">,</span> <span class="n">_</span> <span class="nl">bValue:</span> <span class="n">inout</span> <span class="n">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">aValue</span>
</span><span class='line'>    <span class="n">aValue</span> <span class="o">=</span> <span class="n">bValue</span>
</span><span class='line'>    <span class="n">bValue</span> <span class="o">=</span> <span class="n">temp</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">/// 栈模板</span>
</span><span class='line'><span class="k">struct</span> <span class="n">QStack</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">items</span> <span class="o">=</span> <span class="p">[</span><span class="n">T</span><span class="p">]()</span>
</span><span class='line'>    <span class="n">mutating</span> <span class="n">func</span> <span class="n">push</span><span class="p">(</span><span class="n">_</span> <span class="nl">item:</span> <span class="n">T</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">items</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mutating</span> <span class="n">func</span> <span class="n">pop</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">T</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">removeLast</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">isEmpty</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>       <span class="k">return</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="n">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">count</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">count:</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">items</span><span class="p">.</span><span class="n">count</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">subscript</span><span class="p">(</span><span class="nl">i:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">T</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">items</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python筛选目录下非jpeg，png，bmp格式的图片]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/05/15/pythonshai-xuan-mu-lu-xia-fei-jpeg%2Cpng%2Cbmpge-shi-de-tu-pian/"/>
    <updated>2019-05-15T20:01:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/05/15/pythonshai-xuan-mu-lu-xia-fei-jpeg,png,bmpge-shi-de-tu-pian</id>
    <content type="html"><![CDATA[<p> 功能：筛选指定目录下非jpeg/png/bmp格式的文件，并把路径以日志形式输出。</p>

<p>关键有两点：</p>

<ul>
<li>目录遍历，记录所有文件路径。</li>
<li>遍历路径，使用imghdr.what判断文件格式，非jpeg/png/bmp格式的文件路径输出。</li>
</ul>


<p><code>python3.0</code>实现如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">imghdr</span>
</span><span class='line'>
</span><span class='line'><span class="c">##工具功能：筛选目录下非jpeg，png，bmp格式的图片，并输出其路径</span>
</span><span class='line'><span class="c">##Python 3.0</span>
</span><span class='line'>
</span><span class='line'><span class="c">#图片文件夹目录</span>
</span><span class='line'><span class="n">IMAGEPATH</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'><span class="c">#初始化</span>
</span><span class='line'><span class="k">def</span> <span class="nf">init</span><span class="p">():</span>
</span><span class='line'>    <span class="k">global</span> <span class="n">IMAGEPATH</span>
</span><span class='line'>    <span class="n">IMAGEPATH</span>  <span class="o">=</span> <span class="s">&quot;/Users/ksnowlv/Documents/image&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># 功能：读取指定目录下的所有文件绝对路径（包括该目录下所有子目录），并以列表形式返回</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">readDir</span><span class="p">(</span><span class="n">dirPath</span><span class="p">):</span>
</span><span class='line'>    <span class="n">myDirPath</span> <span class="o">=</span> <span class="n">dirPath</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">dirPath</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">):</span><span class="c"># 要求传入的路径参数最后不能有斜杠,目的是为了递归时格式统一</span>
</span><span class='line'>        <span class="n">myDirPath</span> <span class="o">=</span> <span class="n">dirPath</span><span class="o">.</span><span class="n">rstrip</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;文件夹路径末尾删除/ = </span><span class="si">%s</span><span class="s">&#39;</span><span class="o">%</span><span class="p">(</span><span class="n">myDirPath</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">allFiles</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isdir</span><span class="p">(</span><span class="n">myDirPath</span><span class="p">):</span>
</span><span class='line'>        <span class="n">fileList</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">myDirPath</span><span class="p">)</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">fileList</span><span class="p">:</span>
</span><span class='line'>            <span class="n">f</span> <span class="o">=</span> <span class="n">myDirPath</span><span class="o">+</span><span class="s">&#39;/&#39;</span><span class="o">+</span><span class="n">f</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isdir</span><span class="p">(</span><span class="n">f</span><span class="p">):</span>
</span><span class='line'>                <span class="n">subFiles</span> <span class="o">=</span> <span class="n">readDir</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>                <span class="n">allFiles</span> <span class="o">=</span> <span class="n">subFiles</span> <span class="o">+</span> <span class="n">allFiles</span> <span class="c">#合并当前目录与子目录的所有文件路径</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="n">allFiles</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">allFiles</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="s">&#39;Error,not a dir&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">allFiles</span>
</span><span class='line'>
</span><span class='line'><span class="c">#根据路径筛选出非目标图片的路径</span>
</span><span class='line'><span class="k">def</span> <span class="nf">filterPicture</span><span class="p">(</span><span class="n">fileList</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">fileName</span> <span class="ow">in</span> <span class="n">fileList</span><span class="p">:</span>
</span><span class='line'>        <span class="c"># data = open(fileName, &#39;rb&#39;).read(20)</span>
</span><span class='line'>        <span class="n">fileType</span> <span class="o">=</span> <span class="n">imghdr</span><span class="o">.</span><span class="n">what</span><span class="p">(</span><span class="n">fileName</span><span class="p">)</span>
</span><span class='line'>        <span class="c"># print(&quot;filename = %s fileType = %s&quot; % (fileName,fileType))</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">fileType</span> <span class="o">!=</span> <span class="s">&quot;jpeg&quot;</span> <span class="ow">and</span> <span class="n">fileType</span> <span class="o">!=</span> <span class="s">&quot;png&quot;</span> <span class="ow">and</span> <span class="n">fileType</span> <span class="o">!=</span> <span class="s">&quot;bmp&quot;</span><span class="p">:</span>
</span><span class='line'>            <span class="k">print</span><span class="p">(</span><span class="s">&quot;filename = </span><span class="si">%s</span><span class="s"> can not parse fileType = </span><span class="si">%s</span><span class="s"> &quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">fileName</span><span class="p">,</span> <span class="n">fileType</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class='line'>    <span class="n">init</span><span class="p">()</span>
</span><span class='line'>    <span class="n">fileList</span> <span class="o">=</span> <span class="n">readDir</span><span class="p">(</span><span class="n">IMAGEPATH</span><span class="p">)</span>
</span><span class='line'>    <span class="n">filterPicture</span><span class="p">(</span><span class="n">fileList</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kotlin-native]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/05/05/kotlin-native/"/>
    <updated>2019-05-05T15:09:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/05/05/kotlin-native</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kotlin通过jni间接调用c++]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/25/kotlintong-guo-jnijian-jie-diao-yong-c-plus-plus/"/>
    <updated>2019-04-25T19:44:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/25/kotlintong-guo-jnijian-jie-diao-yong-c-plus-plus</id>
    <content type="html"><![CDATA[<p>本篇重点内容，Kotlin通过JNI直接调用C，C调用C++相关的类。实际上只是JAVA换成Kotlin的写法而已。</p>

<h3>一.添加Kotlin类<code>KotlinPerson</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">class</span> <span class="nc">KotlinPerson</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">var</span> <span class="n">mPerson</span><span class="p">:</span> <span class="n">Long</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">mPerson</span> <span class="p">=</span> <span class="n">createPerson</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">setPersonName</span><span class="p">(</span><span class="n">name</span><span class="p">:</span> <span class="n">String</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">setName</span><span class="p">(</span><span class="n">mPerson</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">personName</span><span class="p">():</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">name</span><span class="p">(</span><span class="n">mPerson</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">setPersonAge</span><span class="p">(</span><span class="n">age</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">setAge</span><span class="p">(</span><span class="n">mPerson</span><span class="p">,</span><span class="n">age</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">personAge</span><span class="p">()</span> <span class="p">:</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">age</span><span class="p">(</span><span class="n">mPerson</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">companion</span> <span class="n">object</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">init</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">System</span><span class="p">.</span><span class="n">loadLibrary</span><span class="p">(</span><span class="s">&quot;JNIPerson&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">createPerson</span><span class="p">():</span> <span class="n">Long</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">destroyPerson</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">)</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">setName</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">,</span> <span class="n">name</span><span class="p">:</span> <span class="n">String</span><span class="p">)</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">name</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">):</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">setAge</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">,</span> <span class="n">age</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">age</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">):</span> <span class="n">Int</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>二.添加JNI接口及实现</h3>

<p><code>JNIPerson.c</code>内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="s">&quot;JNIPerson.h&quot;</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="s">&quot;PersonExtension.hpp&quot;</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="s">&quot;JNILog.h&quot;</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">stdlib</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">string</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    createPerson</span>
</span><span class='line'><span class="cm">    * Signature: ()Ljava/lang/Object;</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_createPerson</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>        <span class="kt">void</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'>  
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">jlong</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    destroyPerson</span>
</span><span class='line'><span class="cm">    * Signature: (Ljava/lang/Object;)V</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_destroyPerson</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>          <span class="n">destroyPerson</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    setPersonAge</span>
</span><span class='line'><span class="cm">    * Signature: (Ljava/lang/Object;I)V</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_setAge</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">setPersonAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    personAge</span>
</span><span class='line'><span class="cm">    * Signature: (Ljava/lang/Object;)I</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_age</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="k">return</span> <span class="n">personAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_setName</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>        <span class="kt">int</span> <span class="n">length1</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">);</span>
</span><span class='line'>        <span class="k">const</span> <span class="n">jchar</span> <span class="o">*</span> <span class="n">jcstr</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringChars</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>         <span class="n">jclass</span>   <span class="n">clsstring</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;java/lang/String&quot;</span><span class="p">);</span>  <span class="c1">//String</span>
</span><span class='line'>         <span class="n">jstring</span>   <span class="n">code</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;UTF-8&quot;</span><span class="p">);</span> <span class="c1">//&quot;UTF-8&quot;</span>
</span><span class='line'>         <span class="n">jmethodID</span>   <span class="n">methodID</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">clsstring</span><span class="p">,</span>   <span class="s">&quot;getBytes&quot;</span><span class="p">,</span>   <span class="s">&quot;(Ljava/lang/String;)[B&quot;</span><span class="p">);</span> <span class="c1">//getBytes();</span>
</span><span class='line'>         <span class="n">jbyteArray</span>   <span class="n">byteArray</span> <span class="o">=</span>   <span class="p">(</span><span class="n">jbyteArray</span><span class="p">)(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">CallObjectMethod</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">string</span><span class="p">,</span><span class="n">methodID</span><span class="p">,</span><span class="n">code</span><span class="p">);</span>
</span><span class='line'>         <span class="n">jsize</span>   <span class="n">length</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetArrayLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">);</span>
</span><span class='line'>         <span class="n">jbyte</span><span class="o">*</span>   <span class="n">bytes</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">JNI_FALSE</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>         <span class="k">if</span><span class="p">(</span> <span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>  
</span><span class='line'>            <span class="kt">char</span><span class="o">*</span> <span class="n">buf</span> <span class="o">=</span>   <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>         <span class="c1">//&quot;\0&quot;</span>
</span><span class='line'>            <span class="n">memcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>            <span class="n">buf</span><span class="p">[</span><span class="n">length</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>            <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;set name = %s&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>            <span class="n">free</span><span class="p">(</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>         <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>         <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">ReleaseByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>  <span class="c1">//释放内存空间</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    personName</span>
</span><span class='line'><span class="cm">    * Signature: (Ljava/lang/Object;)Ljava/lang/String;</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="n">jstring</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_name</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>        <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni get name&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">personName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span> <span class="n">name</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni name = %s&quot;</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span>  <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="s">&quot;JNIPerson.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;PersonExtension.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &quot;JNILog.h&quot;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    createPerson</span>
</span><span class='line'><span class="cm">   * Signature: ()Ljava/lang/Object;</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_createPerson</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="kt">void</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span><span class="n">jlong</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    destroyPerson</span>
</span><span class='line'><span class="cm">   * Signature: (Ljava/lang/Object;)V</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_destroyPerson</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">destroyPerson</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    setPersonAge</span>
</span><span class='line'><span class="cm">   * Signature: (Ljava/lang/Object;I)V</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_setAge</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">setPersonAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    personAge</span>
</span><span class='line'><span class="cm">   * Signature: (Ljava/lang/Object;)I</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_age</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">personAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_setName</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="kt">int</span> <span class="n">length1</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">);</span>
</span><span class='line'>      <span class="k">const</span> <span class="n">jchar</span> <span class="o">*</span> <span class="n">jcstr</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringChars</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>       <span class="n">jclass</span>   <span class="n">clsstring</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;java/lang/String&quot;</span><span class="p">);</span>  <span class="c1">//String</span>
</span><span class='line'>       <span class="n">jstring</span>   <span class="n">code</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;UTF-8&quot;</span><span class="p">);</span> <span class="c1">//&quot;UTF-8&quot;</span>
</span><span class='line'>       <span class="n">jmethodID</span>   <span class="n">methodID</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">clsstring</span><span class="p">,</span>   <span class="s">&quot;getBytes&quot;</span><span class="p">,</span>   <span class="s">&quot;(Ljava/lang/String;)[B&quot;</span><span class="p">);</span> <span class="c1">//getBytes();</span>
</span><span class='line'>       <span class="n">jbyteArray</span>   <span class="n">byteArray</span> <span class="o">=</span>   <span class="p">(</span><span class="n">jbyteArray</span><span class="p">)(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">CallObjectMethod</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">string</span><span class="p">,</span><span class="n">methodID</span><span class="p">,</span><span class="n">code</span><span class="p">);</span>
</span><span class='line'>       <span class="n">jsize</span>   <span class="n">length</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetArrayLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">);</span>
</span><span class='line'>       <span class="n">jbyte</span><span class="o">*</span>   <span class="n">bytes</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">JNI_FALSE</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span> <span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>          <span class="kt">char</span><span class="o">*</span> <span class="n">buf</span> <span class="o">=</span>   <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>         <span class="c1">//&quot;\0&quot;</span>
</span><span class='line'>          <span class="n">memcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>          <span class="n">buf</span><span class="p">[</span><span class="n">length</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>          <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>          <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;set name = %s&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>          <span class="n">free</span><span class="p">(</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>          <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>       <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">ReleaseByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>  <span class="c1">//释放内存空间</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    personName</span>
</span><span class='line'><span class="cm">   * Signature: (Ljava/lang/Object;)Ljava/lang/String;</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jstring</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_name</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni get name&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">personName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="n">name</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni name = %s&quot;</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>          <span class="k">return</span>  <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>三.调用</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">var</span> <span class="n">person</span> <span class="p">=</span> <span class="n">KotlinPerson</span><span class="p">()</span>
</span><span class='line'><span class="n">person</span><span class="p">.</span><span class="n">setPersonAge</span><span class="p">(</span><span class="m">10</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;----Android age = &quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span> <span class="p">+</span> <span class="n">person</span><span class="p">.</span><span class="n">personAge</span><span class="p">())</span>
</span><span class='line'><span class="n">person</span><span class="p">.</span><span class="n">setPersonName</span><span class="p">(</span><span class="s">&quot;ksnowlv(律威)&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;----Android name = &quot;</span><span class="p">,</span> <span class="n">person</span><span class="p">.</span><span class="n">personName</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<h3>四.日志输出</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android通过jni间接调用c++]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/22/androidtong-guo-jnijian-jie-diao-yong-c-plus-plus/"/>
    <updated>2019-04-22T11:23:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/22/androidtong-guo-jnijian-jie-diao-yong-c-plus-plus</id>
    <content type="html"><![CDATA[<p>本篇重点内容，C如何调用C++类，思路是JAVA通过JNI直接调用C，C调用C++相关的类。</p>

<h4>1.JAVA层接口Person类相关接口</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="n">class</span> <span class="n">JavaCallJNI</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">static</span>  <span class="p">{</span>
</span><span class='line'>      <span class="n">System</span><span class="p">.</span><span class="n">loadLibrary</span><span class="p">(</span><span class="s">&quot;JNITest&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">int</span> <span class="n">showValue</span><span class="p">(</span><span class="kt">int</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">long</span>  <span class="nf">createPerson</span><span class="p">();</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">void</span> <span class="nf">destroyPerson</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">);</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">void</span> <span class="nf">setPersonAge</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">,</span>  <span class="kt">int</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">int</span> <span class="nf">personAge</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">);</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">void</span> <span class="nf">setPersonName</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">,</span> <span class="n">String</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="n">String</span>  <span class="nf">personName</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2.C接口及实现</h3>

<p><code>com_ksnowlv_hellojniforjava_JavaCallJNI.h</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">jni</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="cm">/* Header for class com_ksnowlv_hellojniforjava_JavaCallJNI */</span>
</span><span class='line'>  
</span><span class='line'>  <span class="err">#</span><span class="n">ifndef</span> <span class="n">_Included_com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'>  <span class="err">#</span><span class="n">define</span> <span class="n">_Included_com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'>  <span class="err">#</span><span class="n">ifdef</span> <span class="n">__cplusplus</span>
</span><span class='line'>  <span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">#</span><span class="n">endif</span>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    showValue</span>
</span><span class='line'><span class="cm">  * Signature: (I)I</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jint</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    createPerson</span>
</span><span class='line'><span class="cm">  * Signature: ()J</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_createPerson</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    destroyPerson</span>
</span><span class='line'><span class="cm">  * Signature: (J)V</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_destroyPerson</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    setPersonAge</span>
</span><span class='line'><span class="cm">  * Signature: (JI)V</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_setPersonAge</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">,</span> <span class="n">jint</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    personAge</span>
</span><span class='line'><span class="cm">  * Signature: (J)I</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_personAge</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    setPersonName</span>
</span><span class='line'><span class="cm">  * Signature: (JLjava/lang/String;)V</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_setPersonName</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">,</span> <span class="n">jstring</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    personName</span>
</span><span class='line'><span class="cm">  * Signature: (J)Ljava/lang/String;</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jstring</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_personName</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="err">#</span><span class="n">ifdef</span> <span class="n">__cplusplus</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="err">#</span><span class="n">endif</span>
</span><span class='line'>  <span class="err">#</span><span class="n">endif</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><code>com_ksnowlv_hellojniforjava_JavaCallJNI.c</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#include &quot;com_ksnowlv_hellojniforjava_JavaCallJNI.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;PersonExtension.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &quot;JNILog.h&quot;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span> <span class="n">enc</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span> <span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni value = %d&quot;</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>  <span class="n">value</span> <span class="o">=</span> <span class="n">value</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni value +1 = %d&quot;</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    createPerson</span>
</span><span class='line'><span class="cm"> * Signature: ()Ljava/lang/Object;</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_createPerson</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">jlong</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    destroyPerson</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;)V</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_destroyPerson</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">destroyPerson</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    setPersonAge</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;I)V</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_setPersonAge</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">setPersonAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    personAge</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;)I</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_personAge</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">personAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    setPersonName</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;Ljava/lang/String;)V</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_setPersonName</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">length1</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="n">jchar</span> <span class="o">*</span> <span class="n">jcstr</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringChars</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>     <span class="n">jclass</span>   <span class="n">clsstring</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;java/lang/String&quot;</span><span class="p">);</span>  <span class="c1">//String</span>
</span><span class='line'>     <span class="n">jstring</span>   <span class="n">code</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;UTF-8&quot;</span><span class="p">);</span> <span class="c1">//&quot;UTF-8&quot;</span>
</span><span class='line'>     <span class="n">jmethodID</span>   <span class="n">methodID</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">clsstring</span><span class="p">,</span>   <span class="s">&quot;getBytes&quot;</span><span class="p">,</span>   <span class="s">&quot;(Ljava/lang/String;)[B&quot;</span><span class="p">);</span> <span class="c1">//getBytes();</span>
</span><span class='line'>     <span class="n">jbyteArray</span>   <span class="n">byteArray</span> <span class="o">=</span>   <span class="p">(</span><span class="n">jbyteArray</span><span class="p">)(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">CallObjectMethod</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">string</span><span class="p">,</span><span class="n">methodID</span><span class="p">,</span><span class="n">code</span><span class="p">);</span>
</span><span class='line'>     <span class="n">jsize</span>   <span class="n">length</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetArrayLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">);</span>
</span><span class='line'>     <span class="n">jbyte</span><span class="o">*</span>   <span class="n">bytes</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">JNI_FALSE</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span> <span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">char</span><span class="o">*</span> <span class="n">buf</span> <span class="o">=</span>   <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>         <span class="c1">//&quot;\0&quot;</span>
</span><span class='line'>        <span class="n">memcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>        <span class="n">buf</span><span class="p">[</span><span class="n">length</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>        <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;set name = %s&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>        <span class="n">free</span><span class="p">(</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">ReleaseByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>  <span class="c1">//释放内存空间</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    personName</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;)Ljava/lang/String;</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jstring</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_personName</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni get name&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">personName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="n">name</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni name = %s&quot;</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span>  <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3.JAVA调用</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">int</span> <span class="n">value</span> <span class="o">=</span>  <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">showValue</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;------Android &quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">long</span> <span class="n">p</span> <span class="o">=</span>  <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'><span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">setPersonAge</span><span class="p">(</span><span class="n">p</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">personAge</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;------Android &quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'><span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">setPersonName</span><span class="p">(</span><span class="n">p</span><span class="p">,</span><span class="s">&quot;ksnowlv(律威)&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">personName</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;------Android &quot;</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'><span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">destroyPerson</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>4.日志输出</h3>

<pre><code>28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: jni value = 1
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: jni value +1 = 2
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------Android: 2
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------Android: 10
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: set name = ksnowlv(律威)
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: jni get name
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: jni name = ksnowlv(律威)
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------Android: ksnowlv(律威)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android通过jni调用c++]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/18/androidtong-guo-jnidiao-yong-c-plus-plus/"/>
    <updated>2019-04-18T15:16:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/18/androidtong-guo-jnidiao-yong-c-plus-plus</id>
    <content type="html"><![CDATA[<p>本篇重点内容在于如何把C++的类通过JNI转换为JAVA的类</p>

<h3>1.创建JAVA类：<code>JavaPerson</code></h3>

<pre><code>public class JavaPerson {


private long mNativePerson;

public JavaPerson()
{
    mNativePerson = init();
}

public int getAge()
{
    return this.native_getAge(mNativePerson);
}

public void setAge(int age)
{
    native_setAge(mNativePerson, age);
}

public String getName() {
    return native_getName(mNativePerson);
}

public void setName(String name) {
    native_setName(mNativePerson, name);
}


@Override
protected void finalize() throws Throwable {

    if (mNativePerson != 0) {
        finalizer(mNativePerson);
    }

    super.finalize();
}

    static {
        System.loadLibrary("jniPerson");
    }

    private native long  init();
    private native void finalizer(long aPerson);
    private native int native_getAge(long aPerson);
    private native void native_setAge(long aPerson, int age);
    private native String native_getName(long aPerson);
    private native void native_setName(long aPerson, String name);
}
</code></pre>

<h3>2.通过Terminal生成c++头文件：<code>com_ksnowlv_jnicallc_JavaPerson.h</code></h3>

<pre><code>#ifndef _Included_com_ksnowlv_jnicallc_JavaPerson
#define _Included_com_ksnowlv_jnicallc_JavaPerson
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    init
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_init
  (JNIEnv *, jobject);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    finalizer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_finalizer
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_getAge
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_setAge
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_getName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_setName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName
  (JNIEnv *, jobject, jlong, jstring);

#ifdef __cplusplus
}
#endif
#endif
</code></pre>

<h3>3.添加c++实现文件：<code>com_ksnowlv_jnicallc_JavaPerson.cpp</code></h3>

<pre><code>//
// Created by ksnowlv on 2019-04-18.
//

#include"com_ksnowlv_jnicallc_JavaPerson.h"
#include "Person.hpp"
#include "JNILog.h"
#include &lt;string.h&gt;

extern "C"
{

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    init
 * Signature: ()I
 */
JNIEXPORT jlong JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_init
  (JNIEnv *, jobject) {

      LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_init");
      Person *person = new Person();
      return (jlong)person;

  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    finalizer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_finalizer
  (JNIEnv *, jobject cls, jlong thisObject) {

    LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_finalizer");

    Person *person = (Person *)thisObject;

    if (NULL != person) {
        delete person;
        person = NULL;
    }

  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_getAge
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge
  (JNIEnv *evn, jobject cls, jlong thisObject ) {

    Person *person = (Person *)thisObject;

    LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge= %d", person-&gt;age());

    if (NULL != person) {

        return person-&gt;age();
    }

    return -1;
  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_setAge
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge
  (JNIEnv *env, jobject cls, jlong thisObject, jint age ) {

      LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge = %d", age);

      Person *person = (Person *)thisObject;

      if ( NULL != person ) {
        person-&gt;setAge(age);
      }
  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_getName
 * Signature: (J)I
 */
JNIEXPORT jstring JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName
  (JNIEnv *env, jobject cls, jlong thisObject) {
      LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName");

      Person *person = (Person *)thisObject;

      if ( NULL != person ) {
          const char *name = person-&gt;name();
          if ( name != NULL ) {
               // LOGI("JNI name = %s",name);
                return  env-&gt;NewStringUTF(name);
           }
       }

    return env-&gt;NewStringUTF("");
  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_setName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName
  (JNIEnv *env, jobject cls, jlong thisObject, jstring string) {

    LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName");

     jclass   clsstring   =   env-&gt;FindClass("java/lang/String");  //String
     jstring   code   =   env-&gt;NewStringUTF("UTF8"); //"UTF8"
     jmethodID   methodID   =   env-&gt;GetMethodID(clsstring, "getBytes", "(Ljava/lang/String;)[B"); //getBytes(String);
     jbyteArray   byteArray =   (jbyteArray)env-&gt;CallObjectMethod(string,methodID,code); // String .getByte("UTF8");
     jsize   length   =   env-&gt;GetArrayLength(byteArray);
     jbyte*   bytes   =   env-&gt;GetByteArrayElements(byteArray,JNI_FALSE);

    Person *person = (Person *)thisObject;

    if ( NULL != person ) {
       if( length &gt; 0){
            char* buf =   new char[length+1];
            memset(buf,0,length+1);
            memcpy(buf,bytes,length);
            person-&gt;setName(buf);
            LOGE("JNI set name = %s",buf);
            delete []buf;
         }else{
            person-&gt;setName(NULL);
         }
    }



     env-&gt;ReleaseByteArrayElements(byteArray,bytes,0);  //释放内存空间
  }

}

static  JNINativeMethod methods[] = {

        {"init", "()J", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_init},
        {"finalizer", "(J)V", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_finalizer},
        {"native_getAge", "(J)I", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge},
        {"native_setAge", "(JI)V", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge},
        {"native_getName", "(J)Ljava/lang/String;", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName},
        {"native_setName", "(JLjava/lang/String;)V", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName},
};





static const char * classPathName = "com/ksnowlv/jnicallc/JavaPerson";
/*
 * Register several native methods for one class.
 */
static int registerNativeMethods(JNIEnv* env, const char* className,
                                 JNINativeMethod* gMethods, int numMethods)
{
    jclass clazz;
    clazz = env-&gt;FindClass(className);
    if (clazz == NULL) {
        LOGE("JavaPerson Native registration unable to find class '%s'", className);
        return JNI_FALSE;
    }
    if (env-&gt;RegisterNatives(clazz, gMethods, numMethods) &lt; 0) {
        LOGE("JavaPerson RegisterNatives failed for '%s'", className);
        return JNI_FALSE;
    }

    LOGE("JavaPerson registerNativeMethods OK");
    return JNI_TRUE;
}
/*
 * Register native methods for all classes we know about.
 *
 * returns JNI_TRUE on success.
 */
static int registerNatives(JNIEnv* env)
{
    if (!registerNativeMethods(env, classPathName,
                               methods, sizeof(methods) / sizeof(methods[0]))) {
        LOGE("JavaPerson class registerNatives FAIL");
        return JNI_FALSE;
    }

    LOGE("JavaPerson registerNatives OK");
    return JNI_TRUE;
}
// ----------------------------------------------------------------------------
/*
 * This is called by the VM when the shared library is first loaded.
 */

typedef union {
    JNIEnv* env;
    void* venv;
} UnionJNIEnvToVoid;

jint JNI_OnLoad(JavaVM* vm, void* reserved)
{
    UnionJNIEnvToVoid uenv;
    uenv.venv = NULL;
    jint result = -1;
    JNIEnv* env = NULL;

    LOGE("JNI_OnLoad");
    if (vm-&gt;GetEnv(&amp;uenv.venv, JNI_VERSION_1_4) != JNI_OK) {
        LOGE("ERROR: GetEnv failed");
        goto bail;
    }
    env = uenv.env;
    if (registerNatives(env) != JNI_TRUE) {
        LOGE("ERROR: registerNatives failed");
        goto bail;
    }

    result = JNI_VERSION_1_4;

    LOGE("JNI_OnLoad OK");
    bail:
    return result;
}
</code></pre>

<h4>4.在Android中的调用</h4>

<pre><code>   JavaPerson person = new JavaPerson();
    person.setAge(10);
    Log.i("------JNICallC++: Android person age =  ","" + person.getAge());
    person.setName("ksnowlv(律威)");
    Log.i("------JNICallC++: Android person name =  ","" + person.getName());   
</code></pre>

<h4>5.输出</h4>

<pre><code>2019-04-19 17:02:27.114 30422-30422/? E/------JNICallC++: JNI_OnLoad
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JavaPerson registerNativeMethods OK
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JavaPerson registerNatives OK
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI_OnLoad OK
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_init
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge = 10
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge= 10
2019-04-19 17:02:27.115 30422-30422/? I/------JNICallC++: Android person age =: 10
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName
2019-04-19 17:02:27.116 30422-30422/? E/------JNICallC++: JNI set name = ksnowlv(律威)
2019-04-19 17:02:27.116 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName
2019-04-19 17:02:27.116 30422-30422/? I/------JNICallC++: Android person name =: ksnowlv(律威)
</code></pre>

<h4>6.说明</h4>

<ul>
<li>C++<code>Person</code>类同上一工程 。</li>
<li>注意JNI调用C++和C的区别。

<ul>
<li>JNI_OnLoad相关：像JNINativeMethod methods注意函数映射参数，classPathName类路径等</li>
<li>env调用方式</li>
<li>C++对象回收内存</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android-jni-demo]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/10/android-jni-demo/"/>
    <updated>2019-04-10T17:14:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/10/android-jni-demo</id>
    <content type="html"><![CDATA[<h4>1.创建<code>app/src/main/jniLibs</code>目录</h4>

<h4>2.把so库拷贝到<code>jniLibs</code>目录。</h4>

<h4>3.<code>JavaCallJNI</code>内容如下</h4>

<p>···objective-c</p>

<p>public class JavaCallJNI {</p>

<pre><code>static  {
    System.loadLibrary("JNITest");
}


public static native int showValue(int value);
</code></pre>

<p>}</p>

<p>···</p>

<h4>4.<code>com_ksnowlv_hellojniforjava_JavaCallJNI.h</code>内容如下：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/* DO NOT EDIT THIS FILE - it is machine generated */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;jni.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Header for class com_ksnowlv_hellojniforjava_JavaCallJNI */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef _Included_com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define _Included_com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'>
</span><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    showValue</span>
</span><span class='line'><span class="cm"> * Signature: (I)I</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jint</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span><span class="n">ifdef</span> <span class="n">__cplusplus</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<h4>5.<code>com_ksnowlv_hellojniforjava_JavaCallJNI.c</code>内容如下：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#include &quot;com_ksnowlv_hellojniforjava_JavaCallJNI.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;PersonExtension.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &quot;JNILog.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span> <span class="n">enc</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span> <span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni value = %d&quot;</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>  <span class="n">value</span> <span class="o">=</span> <span class="n">value</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni value +1 = %d&quot;</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h4>6。Android中调用如下：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span>  <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">showValue</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Log</span><span class="p">.</span><span class="n">e</span><span class="p">(</span><span class="s">&quot;#### value &quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">value</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Android</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[”mac下配置jni开发环境(二)“]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/09/macxia-pei-zhi-jnikai-fa-huan-jing-er/"/>
    <updated>2019-04-09T20:30:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/09/macxia-pei-zhi-jnikai-fa-huan-jing-er</id>
    <content type="html"><![CDATA[<p>创建android基础工程</p>

<h4>1.JNI java文件创建</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="n">class</span> <span class="n">JavaCallJNI</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">static</span>  <span class="p">{</span>
</span><span class='line'>        <span class="n">System</span><span class="p">.</span><span class="n">loadLibrary</span><span class="p">(</span><span class="s">&quot;JniTest&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">int</span> <span class="n">showValue</span><span class="p">(</span><span class="kt">int</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-er/jni-files.png" alt="image" /></p>

<h4>2.在<code>app/scr/main/</code>目录下，创建目录<code>jni</code></h4>

<h4>3.在jni目录下，创建<code>Android.mk</code>文件</h4>

<p>文件内容如下：</p>

<pre><code>LOCAL_PATH := $(call my-dir)
include $(CLEAR_VARS)


LOCAL_MODULE := jniTest
LOCAL_SRC_FILES := com_ksnowlv_hellojniforjava_JavaCallJNI.c

include $(BUILD_SHARED_LIBRARY)
</code></pre>

<p>其中</p>

<ul>
<li><p>LOCAL_MODULE := JniTest</p>

<pre><code>  这里JniTest，是将要生成的`.so`库的名字，会自动加上 lib前缀，
  最终生成库文件：libJniTest.so
  如果要引用该库：System.loadLibrary("JniTest")
</code></pre></li>
<li><p>LOCAL_SRC_FILES := com_ksnowlv_hellojniforjava_JavaCallJNI</p>

<pre><code>  JNI头文件com_ksnowlv_hellojniforjava_JavaCallJNI.h对应的.c文件
  命名方式：包名+类名+.c
</code></pre></li>
</ul>


<p>在<code>terminal</code>中生成com_ksnowlv_hellojniforjava_JavaCallJNI.h头文件</p>

<pre><code>ksnowlvdeMacBook-Pro:java ksnowlv$ javac com/ksnowlv/   hellojniforjava/JavaCallJNI.java 
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
ksnowlvdeMacBook-Pro:java ksnowlv$ javah -d ../jni  com.ksnowlv.hellojniforjava.JavaCallJNI
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
ksnowlvdeMacBook-Pro:java ksnowlv$ cd ..
</code></pre>

<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-er/jni_header_create.png" alt="image" /></p>

<p>实现文件中内容如下</p>

<pre><code>#include "com_ksnowlv_hellojniforjava_JavaCallJNI.h"

JNIEXPORT jint JNICALL  Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue(JNIEnv * enc, jclass cls , jint value) {
    value = value + 1;
    return value;
}
</code></pre>

<h4>4.在jni目录下，创建<code>Application.mk</code>文件</h4>

<p>内容如下：</p>

<pre><code>APP_ABI := all  
</code></pre>

<p>会生成所有主流 ABI 类型的 .so 库</p>

<h4>5.更新在当前模块下build.gradle文件</h4>

<ul>
<li><p><code>defaultConfig</code>下增加ndk配置</p>

<pre><code>  ndk {
      moduleName "JniTest" //System.loadLibrary("JniTest");
  }
</code></pre></li>
<li><p>在buildTypes上面添加<code>jni.srcDirs</code>的配置</p>

<pre><code>  sourceSets {
     main {//建议这里直接使用'libs'目录，
     //因为当使用其他包有.so文件时，一般习惯也是直接拷贝进入libs目录
      jni.srcDirs = ['libs']
    }
  }
</code></pre></li>
</ul>


<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-er/build-gradle.png" alt="image" /></p>

<h4>5.在终端进入jni路径:app/src/main/jni,输入<code>ndk-build</code>即生成各种版本的so</h4>

<pre><code>ksnowlvdeMacBook-Pro:java ksnowlv$ javac com/ksnowlv/   hellojniforjava/JavaCallJNI.java 
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
ksnowlvdeMacBook-Pro:java ksnowlv$ javah -d ../jni  com.ksnowlv.hellojniforjava.JavaCallJNI
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
ksnowlvdeMacBook-Pro:java ksnowlv$ cd ..
ksnowlvdeMacBook-Pro:main ksnowlv$ cd jni
ksnowlvdeMacBook-Pro:jni ksnowlv$ ndk-build
</code></pre>

<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-er/so.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[”mac下android配置jni开发环境(一)“]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/09/macxia-pei-zhi-jnikai-fa-huan-jing-1/"/>
    <updated>2019-04-09T18:39:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/09/macxia-pei-zhi-jnikai-fa-huan-jing-1</id>
    <content type="html"><![CDATA[<p>mac机器上，在进行jni开发之前，android studio 3.3.2，需要配置java环境与ndk环境。</p>

<h3>一.配置java环境参数</h3>

<h4>1.通过<em>which java</em>查看Mac下jdk安装目录</h4>

<pre><code>ksnowlvdeMacBook-Pro:~ ksnowlv$ which java
/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/bin/java
</code></pre>

<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-1/jdk-path.png" alt="image" /></p>

<h4>2.在<em>.bash_profile</em>文件中配置java环境</h4>

<pre><code>JAVA_HOME=/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
PATH=$JAVA_HOME/bin:$PATH:.
CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:.

export JAVA_HOME
export PATH
export CLASSPATH
</code></pre>

<h4>3.保存<em>.bash_profile</em>，并使之生效。</h4>

<pre><code>ksnowlvdeMacBook-Pro:~ ksnowlv$ source .bash_profile

ksnowlvdeMacBook-Pro:~ ksnowlv$ echo $JAVA_HOME
/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home

ksnowlvdeMacBook-Pro:~ ksnowlv$ java -version
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
java version "1.6.0_65"
Java(TM) SE Runtime Environment (build 1.6.0_65-b14-468)
Java HotSpot(TM) 64-Bit Server VM (build 20.65-b04-468, mixed mode)
</code></pre>

<h3>二.配置ndk。</h3>

<h4>1.在<em>.bash_profile</em>文件中配置ndk路径</h4>

<pre><code>export ANDROID_NDK_ROOT=/Users/ksnowlv/Library/Android/sdk/ndk-bundle 
export ANDROID_SDK_ROOT=/Users/ksnowlv/Library/Android/sdk

export PATH=$PATH:$ANDROID_SDK_ROOT  
export PATH=$PATH:$ANDROID_NDK_ROOT 
</code></pre>

<p>ndk路径，sdk路径一定要与实际目录一致，参考下图<br/>
<img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-1/jdk-path.png" alt="image" /></p>

<h4>2.保存<em>.bash_profile</em>，并使之生效。</h4>

<pre><code>ksnowlvdeMacBook-Pro:~ ksnowlv$ source .bash_profile
ksnowlvdeMacBook-Pro:~ ksnowlv$ echo $ANDROID_NDK_ROOT
/Users/ksnowlv/Library/Android/sdk/ndk-bundle
ksnowlvdeMacBook-Pro:~ ksnowlv$ echo $ANDROID_SDK_ROOT
/Users/ksnowlv/Library/Android/sdk
ksnowlvdeMacBook-Pro:~ ksnowlv$ 
</code></pre>

<h3>三.其它</h3>

<h4>1.为什么不使用jdk-12.jdk？而使用了旧版jdk？</h4>

<p>javah命令在旧版有效。新版可使用javac -h</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[300指数量化基金]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/05/you-xiu-de-liang-hua-ji-jin/"/>
    <updated>2019-04-05T22:13:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/05/you-xiu-de-liang-hua-ji-jin</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th align="center">基金代码 </th>
<th align="center"> 简称 </th>
<th align="center"> 2016超越沪深300指数% </th>
<th align="center"> 2017超越300指数% </th>
<th align="center"> 2018超越300指数%</th>
<th align="center">3年平均收益率%</th>
<th align="center">基金规模</th>
<th align="center">管理托管费%</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"></td>
<td align="center">163497</td>
<td align="center">兴全沪深300指数增强</td>
<td align="center">11.98</td>
<td align="center">10.05</td>
<td align="center">8.36</td>
<td align="center">10.13</td>
<td align="center">20.25亿元|0.95</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">100038</td>
<td align="center">富国沪深300指数增强</td>
<td align="center">6.27</td>
<td align="center">5.3</td>
<td align="center">8.37</td>
<td align="center">6.65</td>
<td align="center">58.83亿元|1.18</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">00012</td>
<td align="center">华安沪深300增强A</td>
<td align="center">8.33</td>
<td align="center">8.95</td>
<td align="center">3.95</td>
<td align="center">7.08</td>
<td align="center">1.75亿元|1.15</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">519116</td>
<td align="center">浦银沪深300增强</td>
<td align="center">6.6</td>
<td align="center">4.36</td>
<td align="center">5.79</td>
<td align="center">5.59</td>
<td align="center">1.11|1.15</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">110030</td>
<td align="center">易方达沪深量化300增强</td>
<td align="center">9.47</td>
<td align="center">8.06</td>
<td align="center">2.15</td>
<td align="center">6.56</td>
<td align="center">9.86|0.95</td>
</tr>
<tr>
<td align="center"> 000887</td>
<td align="center">华泰柏瑞量化优选 </td>
<td align="center"> 13.93 </td>
<td align="center">2.59 </td>
<td align="center">3.03</td>
<td align="center">6.52</td>
<td align="center"> 40.77</td>
<td align="center">1.25</td>
</tr>
</tbody>
</table>


<h3>计划新增兴全沪深300指数增强，易方达沪深量化300增强长期定投</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift call c++（二）]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/01/swift-call-c-plus-plus-%28er%29/"/>
    <updated>2019-04-01T17:35:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/01/swift-call-c-plus-plus-(er)</id>
    <content type="html"><![CDATA[<p>如何在swift调整c++代码呢？</p>

<p><em>swift通过工程的桥接文件，调用oc的代码，间接调用c++代码!!!</em></p>

<h4>1.创建C++ Person类文件：<code>Person.hpp</code>和<code>Person.cpp</code></h4>

<p><code>Person.hpp</code>内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Person.hpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/28.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef Person_hpp</span>
</span><span class='line'><span class="cp">#define Person_hpp</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">Person</span> <span class="p">{</span>
</span><span class='line'><span class="nl">public:</span>
</span><span class='line'>    <span class="n">Person</span><span class="p">();</span>
</span><span class='line'>    <span class="o">~</span><span class="n">Person</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setName</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">name</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setAge</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nl">private:</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">m_age</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* Person_hpp */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Person.cpp</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Person.cpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/28.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;Person.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Person</span><span class="o">::</span><span class="n">Person</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="n">m_age</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">Person</span><span class="o">::~</span><span class="n">Person</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="p">[]</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Person</span><span class="o">::</span><span class="n">setAge</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">m_age</span> <span class="o">=</span> <span class="n">age</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">Person</span><span class="o">::</span><span class="n">age</span><span class="p">()</span><span class="k">const</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_age</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Person</span><span class="o">::</span><span class="n">setName</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="p">[]</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="n">size_t</span> <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">pName</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">new</span> <span class="kt">char</span><span class="p">[</span><span class="n">len</span><span class="p">];</span>
</span><span class='line'>        <span class="n">memset</span><span class="p">(</span><span class="n">m_pName</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>        <span class="n">strcpy</span><span class="p">(</span><span class="n">m_pName</span><span class="p">,</span> <span class="n">pName</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">Person</span><span class="o">::</span><span class="n">name</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.创建oc类文件：<code>PersonExt.h</code>和<code>PersonExt.mm</code></h4>

<p><code>PersonExt.h</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  PersonExt.h</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/4/1.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">NS_ASSUME_NONNULL_BEGIN</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">PersonExt</span> : <span class="nc">NSObject</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">strong</span><span class="p">)</span> <span class="n">NSString</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="n">NSInteger</span> <span class="n">age</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="n">NS_ASSUME_NONNULL_END</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>PersonExt.mm</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  PersonExt.m</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/4/1.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;PersonExt.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;Person.hpp&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">PersonExt</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">Person</span> <span class="o">*</span><span class="n">_person</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">PersonExt</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">init</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_person</span> <span class="o">=</span> <span class="n">new</span> <span class="n">Person</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">dealloc</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="n">_person</span><span class="p">;</span>
</span><span class='line'>        <span class="n">_person</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">name</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_person</span><span class="o">-&gt;</span><span class="n">setName</span><span class="p">([</span><span class="n">name</span> <span class="n">UTF8String</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">name</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">_person</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>  <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithUTF8String:</span><span class="n">name</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setAge:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">age</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_person</span><span class="o">-&gt;</span><span class="n">setAge</span><span class="p">((</span><span class="k">const</span> <span class="kt">int</span><span class="p">)</span><span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">age</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span>  <span class="n">_person</span><span class="o">-&gt;</span><span class="n">age</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3.在桥接文件中,加入<code>PersonExt.h</code>引用：<code>#include "PersonExt.h"</code></h4>

<h4>4.swift中调用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">let</span> <span class="n">personExt</span> <span class="o">=</span> <span class="n">PersonExt</span><span class="p">()</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">age</span> <span class="o">=</span> <span class="n">personExt</span><span class="p">.</span><span class="n">age</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;age =&quot;</span><span class="p">,</span><span class="n">age</span><span class="p">)</span>
</span><span class='line'>    <span class="n">personExt</span><span class="p">.</span><span class="n">age</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'>    <span class="n">age</span> <span class="o">=</span> <span class="n">personExt</span><span class="p">.</span><span class="n">age</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;age =&quot;</span><span class="p">,</span><span class="n">age</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">personExt</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;ksnowlv&quot;</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;name = &quot;</span><span class="p">,</span><span class="n">personExt</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>结果显而易见：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'><span class="n">name</span> <span class="o">=</span>  <span class="n">ksnowlv</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift call c++（一）]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/01/swift-call-c-plus-plus-%28yi%29/"/>
    <updated>2019-04-01T17:23:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/01/swift-call-c-plus-plus-(yi)</id>
    <content type="html"><![CDATA[<p>如何在swift调整c++代码呢？</p>

<p><em>swift通过工程的桥接文件，调用c的代码，间接调用c++代码!!!</em></p>

<h4>1.创建C++ Person类文件：<code>Person.hpp</code>和<code>Person.cpp</code></h4>

<p><code>Person.hpp</code>内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Person.hpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/28.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef Person_hpp</span>
</span><span class='line'><span class="cp">#define Person_hpp</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">Person</span> <span class="p">{</span>
</span><span class='line'><span class="nl">public:</span>
</span><span class='line'>    <span class="n">Person</span><span class="p">();</span>
</span><span class='line'>    <span class="o">~</span><span class="n">Person</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setName</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">name</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setAge</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nl">private:</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">m_age</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* Person_hpp */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Person.cpp</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Person.cpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/28.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;Person.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Person</span><span class="o">::</span><span class="n">Person</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="n">m_age</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">Person</span><span class="o">::~</span><span class="n">Person</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="p">[]</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Person</span><span class="o">::</span><span class="n">setAge</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">m_age</span> <span class="o">=</span> <span class="n">age</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">Person</span><span class="o">::</span><span class="n">age</span><span class="p">()</span><span class="k">const</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_age</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Person</span><span class="o">::</span><span class="n">setName</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="p">[]</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="n">size_t</span> <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">pName</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">new</span> <span class="kt">char</span><span class="p">[</span><span class="n">len</span><span class="p">];</span>
</span><span class='line'>        <span class="n">memset</span><span class="p">(</span><span class="n">m_pName</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>        <span class="n">strcpy</span><span class="p">(</span><span class="n">m_pName</span><span class="p">,</span> <span class="n">pName</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">Person</span><span class="o">::</span><span class="n">name</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.创建c类文件：<code>PersonExtension.hpp</code>和<code>PersonExtension.cpp</code></h4>

<p><code>PersonExtension.hpp</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  PersonExtension.hpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/29.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef PersonExtension_hpp</span>
</span><span class='line'><span class="cp">#define PersonExtension_hpp</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span><span class="p">{</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>    <span class="c1">//在这里写上c的代码</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//初始化一个Person的实例</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span> <span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="nf">destroyPerson</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="nf">setPersonAge</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">int</span> <span class="nf">personAge</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="nf">setPersonName</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">personName</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* PersonExtension_hpp */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>PersonExtension.cpp</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  PersonExtension.cpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/29.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;PersonExtension.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &quot;Person.hpp&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span> <span class="nf">createPerson</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Person</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">new</span> <span class="n">Person</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="nf">destroyPerson</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="n">delete</span> <span class="n">person</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="nf">setPersonAge</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="n">person</span><span class="o">-&gt;</span><span class="n">setAge</span><span class="p">(</span><span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="nf">personAge</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">person</span><span class="o">-&gt;</span><span class="n">age</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="nf">setPersonName</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="n">person</span><span class="o">-&gt;</span><span class="n">setName</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">personName</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">person</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3.在桥接文件中,加入<code>PersonExtension.hpp</code>引用：<code>#include "PersonExtension.hpp""</code></h4>

<h4>4.swift中调用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>      <span class="n">let</span> <span class="n">person</span> <span class="o">=</span> <span class="n">UnsafeMutableRawPointer</span><span class="p">(</span><span class="nl">mutating:</span> <span class="n">createPerson</span><span class="p">())</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;age =&quot;</span><span class="p">,</span><span class="n">personAge</span><span class="p">(</span><span class="n">person</span><span class="p">))</span>
</span><span class='line'>      <span class="n">setPersonAge</span><span class="p">(</span><span class="n">person</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;age =&quot;</span><span class="p">,</span><span class="n">personAge</span><span class="p">(</span><span class="n">person</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">setPersonName</span><span class="p">(</span><span class="n">person</span><span class="p">,</span> <span class="s">&quot;ksnowlv&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">let</span> <span class="nl">nameBuf:</span><span class="n">UnsafePointer</span><span class="o">&lt;</span><span class="n">Int8</span><span class="o">&gt;</span> <span class="o">=</span> <span class="n">personName</span><span class="p">(</span><span class="n">person</span><span class="p">)</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;name = &quot;</span><span class="p">,</span><span class="n">String</span><span class="p">(</span><span class="nl">cString:</span> <span class="n">nameBuf</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">destroyPerson</span><span class="p">(</span><span class="n">person</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>结果显而易见：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="n">name</span> <span class="o">=</span>  <span class="n">ksnowlv</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift call c]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/01/swift-call-c/"/>
    <updated>2019-04-01T16:13:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/01/swift-call-c</id>
    <content type="html"><![CDATA[<p>如何在swift调整c代码呢？</p>

<p><em>swift通过工程的桥接文件，调用oc或c的相关代码!!!</em></p>

<h4>1.创建c文件：<code>test.h</code>和<code>test.c</code></h4>

<p><code>test.h</code>内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#ifndef test_h</span>
</span><span class='line'><span class="cp">#define test_h</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">showValue</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* test_h */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>test.c</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#include &quot;test.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">showValue</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;old value = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="o">*</span><span class="n">value</span> <span class="o">=</span> <span class="o">*</span><span class="n">value</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;new value = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.在桥接文件中,加入<code>test.h</code>引用：<code>#include "test.h"</code></h4>

<h4>3.swift中调用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>   <span class="n">var</span> <span class="nl">value:</span> <span class="n">Int32</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>   <span class="n">showValue</span><span class="p">(</span><span class="o">&amp;</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>结果显而易见：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">old</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">new</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[go变量声明和使用]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/02/01/gobian-liang/"/>
    <updated>2019-02-01T16:31:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/02/01/gobian-liang</id>
    <content type="html"><![CDATA[<p>go变量声明和使用</p>

<p>···objective-c</p>

<p>package main</p>

<p>import &ldquo;fmt&rdquo;</p>

<p>var x, y int</p>

<p>var (</p>

<pre><code>a int
b bool
</code></pre>

<p>)</p>

<p>var c, d int = 1, 2</p>

<p>var e, f = 123, &ldquo;hello&rdquo;</p>

<p>func main() {</p>

<pre><code>//这咱不带声明格式的用法，只能出现在函数休内
g, h := 123, "hello"

println(x, y, a, b, c, d, e, f, g, h)

var testString string = "hello world!"

fmt.Println(testString)

var a, b int

a, b = 5, 7

println("a=", a, "b=", b)

a, b = b, a

println("a和b交换后 a=", a, "b=", b)
</code></pre>

<p>}</p>

<p>···</p>
]]></content>
  </entry>
  
</feed>
