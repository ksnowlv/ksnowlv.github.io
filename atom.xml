<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ksnowlv]]></title>
  <link href="http://ksnowlv.github.io/atom.xml" rel="self"/>
  <link href="http://ksnowlv.github.io/"/>
  <updated>2019-05-05T15:25:26+08:00</updated>
  <id>http://ksnowlv.github.io/</id>
  <author>
    <name><![CDATA[律威]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[kotlin-native]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/05/05/kotlin-native/"/>
    <updated>2019-05-05T15:09:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/05/05/kotlin-native</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kotlin通过jni间接调用c++]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/25/kotlintong-guo-jnijian-jie-diao-yong-c-plus-plus/"/>
    <updated>2019-04-25T19:44:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/25/kotlintong-guo-jnijian-jie-diao-yong-c-plus-plus</id>
    <content type="html"><![CDATA[<p>本篇重点内容，Kotlin通过JNI直接调用C，C调用C++相关的类。实际上只是JAVA换成Kotlin的写法而已。</p>

<h3>一.添加Kotlin类<code>KotlinPerson</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">class</span> <span class="nc">KotlinPerson</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">var</span> <span class="n">mPerson</span><span class="p">:</span> <span class="n">Long</span> <span class="p">=</span> <span class="m">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">mPerson</span> <span class="p">=</span> <span class="n">createPerson</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">setPersonName</span><span class="p">(</span><span class="n">name</span><span class="p">:</span> <span class="n">String</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">setName</span><span class="p">(</span><span class="n">mPerson</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">personName</span><span class="p">():</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">name</span><span class="p">(</span><span class="n">mPerson</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">setPersonAge</span><span class="p">(</span><span class="n">age</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">setAge</span><span class="p">(</span><span class="n">mPerson</span><span class="p">,</span><span class="n">age</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">fun</span> <span class="nf">personAge</span><span class="p">()</span> <span class="p">:</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">age</span><span class="p">(</span><span class="n">mPerson</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">companion</span> <span class="n">object</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">init</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">System</span><span class="p">.</span><span class="n">loadLibrary</span><span class="p">(</span><span class="s">&quot;JNIPerson&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">createPerson</span><span class="p">():</span> <span class="n">Long</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">destroyPerson</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">)</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">setName</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">,</span> <span class="n">name</span><span class="p">:</span> <span class="n">String</span><span class="p">)</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">name</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">):</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">setAge</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">,</span> <span class="n">age</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span>
</span><span class='line'>    <span class="n">external</span> <span class="k">fun</span> <span class="nf">age</span><span class="p">(</span><span class="n">person</span><span class="p">:</span> <span class="n">Long</span><span class="p">):</span> <span class="n">Int</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>二.添加JNI接口及实现</h3>

<p><code>JNIPerson.c</code>内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="s">&quot;JNIPerson.h&quot;</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="s">&quot;PersonExtension.hpp&quot;</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="s">&quot;JNILog.h&quot;</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">stdlib</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">string</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    createPerson</span>
</span><span class='line'><span class="cm">    * Signature: ()Ljava/lang/Object;</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_createPerson</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>        <span class="kt">void</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'>  
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">jlong</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    destroyPerson</span>
</span><span class='line'><span class="cm">    * Signature: (Ljava/lang/Object;)V</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_destroyPerson</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>          <span class="n">destroyPerson</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    setPersonAge</span>
</span><span class='line'><span class="cm">    * Signature: (Ljava/lang/Object;I)V</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_setAge</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">setPersonAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    personAge</span>
</span><span class='line'><span class="cm">    * Signature: (Ljava/lang/Object;)I</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_age</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="k">return</span> <span class="n">personAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_setName</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>        <span class="kt">int</span> <span class="n">length1</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">);</span>
</span><span class='line'>        <span class="k">const</span> <span class="n">jchar</span> <span class="o">*</span> <span class="n">jcstr</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringChars</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>         <span class="n">jclass</span>   <span class="n">clsstring</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;java/lang/String&quot;</span><span class="p">);</span>  <span class="c1">//String</span>
</span><span class='line'>         <span class="n">jstring</span>   <span class="n">code</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;UTF-8&quot;</span><span class="p">);</span> <span class="c1">//&quot;UTF-8&quot;</span>
</span><span class='line'>         <span class="n">jmethodID</span>   <span class="n">methodID</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">clsstring</span><span class="p">,</span>   <span class="s">&quot;getBytes&quot;</span><span class="p">,</span>   <span class="s">&quot;(Ljava/lang/String;)[B&quot;</span><span class="p">);</span> <span class="c1">//getBytes();</span>
</span><span class='line'>         <span class="n">jbyteArray</span>   <span class="n">byteArray</span> <span class="o">=</span>   <span class="p">(</span><span class="n">jbyteArray</span><span class="p">)(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">CallObjectMethod</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">string</span><span class="p">,</span><span class="n">methodID</span><span class="p">,</span><span class="n">code</span><span class="p">);</span>
</span><span class='line'>         <span class="n">jsize</span>   <span class="n">length</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetArrayLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">);</span>
</span><span class='line'>         <span class="n">jbyte</span><span class="o">*</span>   <span class="n">bytes</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">JNI_FALSE</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>         <span class="k">if</span><span class="p">(</span> <span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>  
</span><span class='line'>            <span class="kt">char</span><span class="o">*</span> <span class="n">buf</span> <span class="o">=</span>   <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>         <span class="c1">//&quot;\0&quot;</span>
</span><span class='line'>            <span class="n">memcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>            <span class="n">buf</span><span class="p">[</span><span class="n">length</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>            <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;set name = %s&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>            <span class="n">free</span><span class="p">(</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>         <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>         <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">ReleaseByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>  <span class="c1">//释放内存空间</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">    * Method:    personName</span>
</span><span class='line'><span class="cm">    * Signature: (Ljava/lang/Object;)Ljava/lang/String;</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="n">JNIEXPORT</span> <span class="n">jstring</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_name</span>
</span><span class='line'>      <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>        <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni get name&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">personName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span> <span class="n">name</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni name = %s&quot;</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span>  <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="s">&quot;JNIPerson.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;PersonExtension.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &quot;JNILog.h&quot;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    createPerson</span>
</span><span class='line'><span class="cm">   * Signature: ()Ljava/lang/Object;</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_createPerson</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="kt">void</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span><span class="n">jlong</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    destroyPerson</span>
</span><span class='line'><span class="cm">   * Signature: (Ljava/lang/Object;)V</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_destroyPerson</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">destroyPerson</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    setPersonAge</span>
</span><span class='line'><span class="cm">   * Signature: (Ljava/lang/Object;I)V</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_setAge</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">setPersonAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    personAge</span>
</span><span class='line'><span class="cm">   * Signature: (Ljava/lang/Object;)I</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_age</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">personAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_setName</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="kt">int</span> <span class="n">length1</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">);</span>
</span><span class='line'>      <span class="k">const</span> <span class="n">jchar</span> <span class="o">*</span> <span class="n">jcstr</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringChars</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>       <span class="n">jclass</span>   <span class="n">clsstring</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;java/lang/String&quot;</span><span class="p">);</span>  <span class="c1">//String</span>
</span><span class='line'>       <span class="n">jstring</span>   <span class="n">code</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;UTF-8&quot;</span><span class="p">);</span> <span class="c1">//&quot;UTF-8&quot;</span>
</span><span class='line'>       <span class="n">jmethodID</span>   <span class="n">methodID</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">clsstring</span><span class="p">,</span>   <span class="s">&quot;getBytes&quot;</span><span class="p">,</span>   <span class="s">&quot;(Ljava/lang/String;)[B&quot;</span><span class="p">);</span> <span class="c1">//getBytes();</span>
</span><span class='line'>       <span class="n">jbyteArray</span>   <span class="n">byteArray</span> <span class="o">=</span>   <span class="p">(</span><span class="n">jbyteArray</span><span class="p">)(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">CallObjectMethod</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">string</span><span class="p">,</span><span class="n">methodID</span><span class="p">,</span><span class="n">code</span><span class="p">);</span>
</span><span class='line'>       <span class="n">jsize</span>   <span class="n">length</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetArrayLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">);</span>
</span><span class='line'>       <span class="n">jbyte</span><span class="o">*</span>   <span class="n">bytes</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">JNI_FALSE</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>       <span class="k">if</span><span class="p">(</span> <span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>          <span class="kt">char</span><span class="o">*</span> <span class="n">buf</span> <span class="o">=</span>   <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>         <span class="c1">//&quot;\0&quot;</span>
</span><span class='line'>          <span class="n">memcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>          <span class="n">buf</span><span class="p">[</span><span class="n">length</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>          <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>          <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;set name = %s&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>          <span class="n">free</span><span class="p">(</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>          <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>       <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">ReleaseByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>  <span class="c1">//释放内存空间</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">   * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">   * Method:    personName</span>
</span><span class='line'><span class="cm">   * Signature: (Ljava/lang/Object;)Ljava/lang/String;</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jstring</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_kotlinjni_KotlinPerson_name</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni get name&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">personName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="n">name</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni name = %s&quot;</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>          <span class="k">return</span>  <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>三.调用</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='kotlin'><span class='line'><span class="k">var</span> <span class="n">person</span> <span class="p">=</span> <span class="n">KotlinPerson</span><span class="p">()</span>
</span><span class='line'><span class="n">person</span><span class="p">.</span><span class="n">setPersonAge</span><span class="p">(</span><span class="m">10</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;----Android age = &quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span> <span class="p">+</span> <span class="n">person</span><span class="p">.</span><span class="n">personAge</span><span class="p">())</span>
</span><span class='line'><span class="n">person</span><span class="p">.</span><span class="n">setPersonName</span><span class="p">(</span><span class="s">&quot;ksnowlv(律威)&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;----Android name = &quot;</span><span class="p">,</span> <span class="n">person</span><span class="p">.</span><span class="n">personName</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<h3>四.日志输出</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android通过jni间接调用c++]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/22/androidtong-guo-jnijian-jie-diao-yong-c-plus-plus/"/>
    <updated>2019-04-22T11:23:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/22/androidtong-guo-jnijian-jie-diao-yong-c-plus-plus</id>
    <content type="html"><![CDATA[<p>本篇重点内容，C如何调用C++类，思路是JAVA通过JNI直接调用C，C调用C++相关的类。</p>

<h4>1.JAVA层接口Person类相关接口</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="n">class</span> <span class="n">JavaCallJNI</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">static</span>  <span class="p">{</span>
</span><span class='line'>      <span class="n">System</span><span class="p">.</span><span class="n">loadLibrary</span><span class="p">(</span><span class="s">&quot;JNITest&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">int</span> <span class="n">showValue</span><span class="p">(</span><span class="kt">int</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">long</span>  <span class="nf">createPerson</span><span class="p">();</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">void</span> <span class="nf">destroyPerson</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">);</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">void</span> <span class="nf">setPersonAge</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">,</span>  <span class="kt">int</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">int</span> <span class="nf">personAge</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">);</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">void</span> <span class="nf">setPersonName</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">,</span> <span class="n">String</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'>  <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="n">String</span>  <span class="nf">personName</span><span class="p">(</span><span class="kt">long</span> <span class="n">person</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2.C接口及实现</h3>

<p><code>com_ksnowlv_hellojniforjava_JavaCallJNI.h</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">jni</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="cm">/* Header for class com_ksnowlv_hellojniforjava_JavaCallJNI */</span>
</span><span class='line'>  
</span><span class='line'>  <span class="err">#</span><span class="n">ifndef</span> <span class="n">_Included_com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'>  <span class="err">#</span><span class="n">define</span> <span class="n">_Included_com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'>  <span class="err">#</span><span class="n">ifdef</span> <span class="n">__cplusplus</span>
</span><span class='line'>  <span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">#</span><span class="n">endif</span>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    showValue</span>
</span><span class='line'><span class="cm">  * Signature: (I)I</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jint</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    createPerson</span>
</span><span class='line'><span class="cm">  * Signature: ()J</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_createPerson</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    destroyPerson</span>
</span><span class='line'><span class="cm">  * Signature: (J)V</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_destroyPerson</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    setPersonAge</span>
</span><span class='line'><span class="cm">  * Signature: (JI)V</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_setPersonAge</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">,</span> <span class="n">jint</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    personAge</span>
</span><span class='line'><span class="cm">  * Signature: (J)I</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_personAge</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    setPersonName</span>
</span><span class='line'><span class="cm">  * Signature: (JLjava/lang/String;)V</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_setPersonName</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">,</span> <span class="n">jstring</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm">  * Method:    personName</span>
</span><span class='line'><span class="cm">  * Signature: (J)Ljava/lang/String;</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="n">JNIEXPORT</span> <span class="n">jstring</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_personName</span>
</span><span class='line'>    <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jlong</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="err">#</span><span class="n">ifdef</span> <span class="n">__cplusplus</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="err">#</span><span class="n">endif</span>
</span><span class='line'>  <span class="err">#</span><span class="n">endif</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p><code>com_ksnowlv_hellojniforjava_JavaCallJNI.c</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#include &quot;com_ksnowlv_hellojniforjava_JavaCallJNI.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;PersonExtension.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &quot;JNILog.h&quot;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span> <span class="n">enc</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span> <span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni value = %d&quot;</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>  <span class="n">value</span> <span class="o">=</span> <span class="n">value</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni value +1 = %d&quot;</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    createPerson</span>
</span><span class='line'><span class="cm"> * Signature: ()Ljava/lang/Object;</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jlong</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_createPerson</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">jlong</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    destroyPerson</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;)V</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_destroyPerson</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">destroyPerson</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    setPersonAge</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;I)V</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_setPersonAge</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">setPersonAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    personAge</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;)I</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_personAge</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">return</span> <span class="n">personAge</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    setPersonName</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;Ljava/lang/String;)V</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_setPersonName</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">,</span> <span class="n">jstring</span> <span class="n">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">length1</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="n">jchar</span> <span class="o">*</span> <span class="n">jcstr</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetStringChars</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">string</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>     <span class="n">jclass</span>   <span class="n">clsstring</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;java/lang/String&quot;</span><span class="p">);</span>  <span class="c1">//String</span>
</span><span class='line'>     <span class="n">jstring</span>   <span class="n">code</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;UTF-8&quot;</span><span class="p">);</span> <span class="c1">//&quot;UTF-8&quot;</span>
</span><span class='line'>     <span class="n">jmethodID</span>   <span class="n">methodID</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">clsstring</span><span class="p">,</span>   <span class="s">&quot;getBytes&quot;</span><span class="p">,</span>   <span class="s">&quot;(Ljava/lang/String;)[B&quot;</span><span class="p">);</span> <span class="c1">//getBytes();</span>
</span><span class='line'>     <span class="n">jbyteArray</span>   <span class="n">byteArray</span> <span class="o">=</span>   <span class="p">(</span><span class="n">jbyteArray</span><span class="p">)(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">CallObjectMethod</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">string</span><span class="p">,</span><span class="n">methodID</span><span class="p">,</span><span class="n">code</span><span class="p">);</span>
</span><span class='line'>     <span class="n">jsize</span>   <span class="n">length</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetArrayLength</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">);</span>
</span><span class='line'>     <span class="n">jbyte</span><span class="o">*</span>   <span class="n">bytes</span>   <span class="o">=</span>   <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">JNI_FALSE</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span> <span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">char</span><span class="o">*</span> <span class="n">buf</span> <span class="o">=</span>   <span class="p">(</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>         <span class="c1">//&quot;\0&quot;</span>
</span><span class='line'>        <span class="n">memcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>        <span class="n">buf</span><span class="p">[</span><span class="n">length</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>        <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;set name = %s&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>        <span class="n">free</span><span class="p">(</span><span class="n">buf</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="n">setPersonName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">ReleaseByteArrayElements</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">byteArray</span><span class="p">,</span><span class="n">bytes</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>  <span class="c1">//释放内存空间</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    personName</span>
</span><span class='line'><span class="cm"> * Signature: (Ljava/lang/Object;)Ljava/lang/String;</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jstring</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_personName</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span><span class="p">,</span> <span class="n">jlong</span> <span class="n">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni get name&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">personName</span><span class="p">((</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">o</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="n">name</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni name = %s&quot;</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span>  <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NewStringUTF</span><span class="p">(</span><span class="n">env</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3.JAVA调用</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">int</span> <span class="n">value</span> <span class="o">=</span>  <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">showValue</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;------Android &quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">long</span> <span class="n">p</span> <span class="o">=</span>  <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'><span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">setPersonAge</span><span class="p">(</span><span class="n">p</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">personAge</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;------Android &quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'><span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">setPersonName</span><span class="p">(</span><span class="n">p</span><span class="p">,</span><span class="s">&quot;ksnowlv(律威)&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">personName</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span><span class='line'><span class="n">Log</span><span class="p">.</span><span class="n">i</span><span class="p">(</span><span class="s">&quot;------Android &quot;</span><span class="p">,</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'><span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">destroyPerson</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>4.日志输出</h3>

<pre><code>28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: jni value = 1
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: jni value +1 = 2
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------Android: 2
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------Android: 10
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: set name = ksnowlv(律威)
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: jni get name
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------JNITest: jni name = ksnowlv(律威)
2019-04-24 16:42:40.759 28410-28410/com.ksnowlv.hellojniforjava I/------Android: ksnowlv(律威)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android通过jni调用c++]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/18/androidtong-guo-jnidiao-yong-c-plus-plus/"/>
    <updated>2019-04-18T15:16:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/18/androidtong-guo-jnidiao-yong-c-plus-plus</id>
    <content type="html"><![CDATA[<p>本篇重点内容在于如何把C++的类通过JNI转换为JAVA的类</p>

<h3>1.创建JAVA类：<code>JavaPerson</code></h3>

<pre><code>public class JavaPerson {


private long mNativePerson;

public JavaPerson()
{
    mNativePerson = init();
}

public int getAge()
{
    return this.native_getAge(mNativePerson);
}

public void setAge(int age)
{
    native_setAge(mNativePerson, age);
}

public String getName() {
    return native_getName(mNativePerson);
}

public void setName(String name) {
    native_setName(mNativePerson, name);
}


@Override
protected void finalize() throws Throwable {

    if (mNativePerson != 0) {
        finalizer(mNativePerson);
    }

    super.finalize();
}

    static {
        System.loadLibrary("jniPerson");
    }

    private native long  init();
    private native void finalizer(long aPerson);
    private native int native_getAge(long aPerson);
    private native void native_setAge(long aPerson, int age);
    private native String native_getName(long aPerson);
    private native void native_setName(long aPerson, String name);
}
</code></pre>

<h3>2.通过Terminal生成c++头文件：<code>com_ksnowlv_jnicallc_JavaPerson.h</code></h3>

<pre><code>#ifndef _Included_com_ksnowlv_jnicallc_JavaPerson
#define _Included_com_ksnowlv_jnicallc_JavaPerson
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    init
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_init
  (JNIEnv *, jobject);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    finalizer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_finalizer
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_getAge
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_setAge
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_getName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_setName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName
  (JNIEnv *, jobject, jlong, jstring);

#ifdef __cplusplus
}
#endif
#endif
</code></pre>

<h3>3.添加c++实现文件：<code>com_ksnowlv_jnicallc_JavaPerson.cpp</code></h3>

<pre><code>//
// Created by ksnowlv on 2019-04-18.
//

#include"com_ksnowlv_jnicallc_JavaPerson.h"
#include "Person.hpp"
#include "JNILog.h"
#include &lt;string.h&gt;

extern "C"
{

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    init
 * Signature: ()I
 */
JNIEXPORT jlong JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_init
  (JNIEnv *, jobject) {

      LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_init");
      Person *person = new Person();
      return (jlong)person;

  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    finalizer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_finalizer
  (JNIEnv *, jobject cls, jlong thisObject) {

    LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_finalizer");

    Person *person = (Person *)thisObject;

    if (NULL != person) {
        delete person;
        person = NULL;
    }

  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_getAge
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge
  (JNIEnv *evn, jobject cls, jlong thisObject ) {

    Person *person = (Person *)thisObject;

    LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge= %d", person-&gt;age());

    if (NULL != person) {

        return person-&gt;age();
    }

    return -1;
  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_setAge
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge
  (JNIEnv *env, jobject cls, jlong thisObject, jint age ) {

      LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge = %d", age);

      Person *person = (Person *)thisObject;

      if ( NULL != person ) {
        person-&gt;setAge(age);
      }
  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_getName
 * Signature: (J)I
 */
JNIEXPORT jstring JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName
  (JNIEnv *env, jobject cls, jlong thisObject) {
      LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName");

      Person *person = (Person *)thisObject;

      if ( NULL != person ) {
          const char *name = person-&gt;name();
          if ( name != NULL ) {
               // LOGI("JNI name = %s",name);
                return  env-&gt;NewStringUTF(name);
           }
       }

    return env-&gt;NewStringUTF("");
  }

/*
 * Class:     com_ksnowlv_jnicallc_JavaPerson
 * Method:    native_setName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName
  (JNIEnv *env, jobject cls, jlong thisObject, jstring string) {

    LOGE("JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName");

     jclass   clsstring   =   env-&gt;FindClass("java/lang/String");  //String
     jstring   code   =   env-&gt;NewStringUTF("UTF8"); //"UTF8"
     jmethodID   methodID   =   env-&gt;GetMethodID(clsstring, "getBytes", "(Ljava/lang/String;)[B"); //getBytes(String);
     jbyteArray   byteArray =   (jbyteArray)env-&gt;CallObjectMethod(string,methodID,code); // String .getByte("UTF8");
     jsize   length   =   env-&gt;GetArrayLength(byteArray);
     jbyte*   bytes   =   env-&gt;GetByteArrayElements(byteArray,JNI_FALSE);

    Person *person = (Person *)thisObject;

    if ( NULL != person ) {
       if( length &gt; 0){
            char* buf =   new char[length+1];
            memset(buf,0,length+1);
            memcpy(buf,bytes,length);
            person-&gt;setName(buf);
            LOGE("JNI set name = %s",buf);
            delete []buf;
         }else{
            person-&gt;setName(NULL);
         }
    }



     env-&gt;ReleaseByteArrayElements(byteArray,bytes,0);  //释放内存空间
  }

}

static  JNINativeMethod methods[] = {

        {"init", "()J", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_init},
        {"finalizer", "(J)V", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_finalizer},
        {"native_getAge", "(J)I", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge},
        {"native_setAge", "(JI)V", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge},
        {"native_getName", "(J)Ljava/lang/String;", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName},
        {"native_setName", "(JLjava/lang/String;)V", (void *)Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName},
};





static const char * classPathName = "com/ksnowlv/jnicallc/JavaPerson";
/*
 * Register several native methods for one class.
 */
static int registerNativeMethods(JNIEnv* env, const char* className,
                                 JNINativeMethod* gMethods, int numMethods)
{
    jclass clazz;
    clazz = env-&gt;FindClass(className);
    if (clazz == NULL) {
        LOGE("JavaPerson Native registration unable to find class '%s'", className);
        return JNI_FALSE;
    }
    if (env-&gt;RegisterNatives(clazz, gMethods, numMethods) &lt; 0) {
        LOGE("JavaPerson RegisterNatives failed for '%s'", className);
        return JNI_FALSE;
    }

    LOGE("JavaPerson registerNativeMethods OK");
    return JNI_TRUE;
}
/*
 * Register native methods for all classes we know about.
 *
 * returns JNI_TRUE on success.
 */
static int registerNatives(JNIEnv* env)
{
    if (!registerNativeMethods(env, classPathName,
                               methods, sizeof(methods) / sizeof(methods[0]))) {
        LOGE("JavaPerson class registerNatives FAIL");
        return JNI_FALSE;
    }

    LOGE("JavaPerson registerNatives OK");
    return JNI_TRUE;
}
// ----------------------------------------------------------------------------
/*
 * This is called by the VM when the shared library is first loaded.
 */

typedef union {
    JNIEnv* env;
    void* venv;
} UnionJNIEnvToVoid;

jint JNI_OnLoad(JavaVM* vm, void* reserved)
{
    UnionJNIEnvToVoid uenv;
    uenv.venv = NULL;
    jint result = -1;
    JNIEnv* env = NULL;

    LOGE("JNI_OnLoad");
    if (vm-&gt;GetEnv(&amp;uenv.venv, JNI_VERSION_1_4) != JNI_OK) {
        LOGE("ERROR: GetEnv failed");
        goto bail;
    }
    env = uenv.env;
    if (registerNatives(env) != JNI_TRUE) {
        LOGE("ERROR: registerNatives failed");
        goto bail;
    }

    result = JNI_VERSION_1_4;

    LOGE("JNI_OnLoad OK");
    bail:
    return result;
}
</code></pre>

<h4>4.在Android中的调用</h4>

<pre><code>   JavaPerson person = new JavaPerson();
    person.setAge(10);
    Log.i("------JNICallC++: Android person age =  ","" + person.getAge());
    person.setName("ksnowlv(律威)");
    Log.i("------JNICallC++: Android person name =  ","" + person.getName());   
</code></pre>

<h4>5.输出</h4>

<pre><code>2019-04-19 17:02:27.114 30422-30422/? E/------JNICallC++: JNI_OnLoad
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JavaPerson registerNativeMethods OK
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JavaPerson registerNatives OK
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI_OnLoad OK
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_init
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1setAge = 10
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1getAge= 10
2019-04-19 17:02:27.115 30422-30422/? I/------JNICallC++: Android person age =: 10
2019-04-19 17:02:27.115 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1setName
2019-04-19 17:02:27.116 30422-30422/? E/------JNICallC++: JNI set name = ksnowlv(律威)
2019-04-19 17:02:27.116 30422-30422/? E/------JNICallC++: JNI Java_com_ksnowlv_jnicallc_JavaPerson_native_1getName
2019-04-19 17:02:27.116 30422-30422/? I/------JNICallC++: Android person name =: ksnowlv(律威)
</code></pre>

<h4>6.说明</h4>

<ul>
<li>C++<code>Person</code>类同上一工程 。</li>
<li>注意JNI调用C++和C的区别。

<ul>
<li>JNI_OnLoad相关：像JNINativeMethod methods注意函数映射参数，classPathName类路径等</li>
<li>env调用方式</li>
<li>C++对象回收内存</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android-jni-demo]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/10/android-jni-demo/"/>
    <updated>2019-04-10T17:14:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/10/android-jni-demo</id>
    <content type="html"><![CDATA[<h4>1.创建<code>app/src/main/jniLibs</code>目录</h4>

<h4>2.把so库拷贝到<code>jniLibs</code>目录。</h4>

<h4>3.<code>JavaCallJNI</code>内容如下</h4>

<p>···objective-c</p>

<p>public class JavaCallJNI {</p>

<pre><code>static  {
    System.loadLibrary("JNITest");
}


public static native int showValue(int value);
</code></pre>

<p>}</p>

<p>···</p>

<h4>4.<code>com_ksnowlv_hellojniforjava_JavaCallJNI.h</code>内容如下：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/* DO NOT EDIT THIS FILE - it is machine generated */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;jni.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Header for class com_ksnowlv_hellojniforjava_JavaCallJNI */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef _Included_com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define _Included_com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'>
</span><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Class:     com_ksnowlv_hellojniforjava_JavaCallJNI</span>
</span><span class='line'><span class="cm"> * Method:    showValue</span>
</span><span class='line'><span class="cm"> * Signature: (I)I</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="n">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jclass</span><span class="p">,</span> <span class="n">jint</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span><span class="n">ifdef</span> <span class="n">__cplusplus</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<h4>5.<code>com_ksnowlv_hellojniforjava_JavaCallJNI.c</code>内容如下：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#include &quot;com_ksnowlv_hellojniforjava_JavaCallJNI.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;PersonExtension.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &quot;JNILog.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="n">jint</span> <span class="n">JNICALL</span> <span class="nf">Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span> <span class="n">enc</span><span class="p">,</span> <span class="n">jclass</span> <span class="n">cls</span> <span class="p">,</span> <span class="n">jint</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni value = %d&quot;</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>  <span class="n">value</span> <span class="o">=</span> <span class="n">value</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="n">LOGI</span><span class="p">(</span><span class="s">&quot;jni value +1 = %d&quot;</span><span class="p">,</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h4>6。Android中调用如下：</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span>  <span class="n">JavaCallJNI</span><span class="p">.</span><span class="n">showValue</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="n">Log</span><span class="p">.</span><span class="n">e</span><span class="p">(</span><span class="s">&quot;#### value &quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span> <span class="o">+</span> <span class="n">value</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Android</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[”mac下配置jni开发环境(二)“]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/09/macxia-pei-zhi-jnikai-fa-huan-jing-er/"/>
    <updated>2019-04-09T20:30:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/09/macxia-pei-zhi-jnikai-fa-huan-jing-er</id>
    <content type="html"><![CDATA[<p>创建android基础工程</p>

<h4>1.JNI java文件创建</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="n">class</span> <span class="n">JavaCallJNI</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">static</span>  <span class="p">{</span>
</span><span class='line'>        <span class="n">System</span><span class="p">.</span><span class="n">loadLibrary</span><span class="p">(</span><span class="s">&quot;JniTest&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">static</span> <span class="n">native</span> <span class="kt">int</span> <span class="n">showValue</span><span class="p">(</span><span class="kt">int</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-er/jni-files.png" alt="image" /></p>

<h4>2.在<code>app/scr/main/</code>目录下，创建目录<code>jni</code></h4>

<h4>3.在jni目录下，创建<code>Android.mk</code>文件</h4>

<p>文件内容如下：</p>

<pre><code>LOCAL_PATH := $(call my-dir)
include $(CLEAR_VARS)


LOCAL_MODULE := jniTest
LOCAL_SRC_FILES := com_ksnowlv_hellojniforjava_JavaCallJNI.c

include $(BUILD_SHARED_LIBRARY)
</code></pre>

<p>其中</p>

<ul>
<li><p>LOCAL_MODULE := JniTest</p>

<pre><code>  这里JniTest，是将要生成的`.so`库的名字，会自动加上 lib前缀，
  最终生成库文件：libJniTest.so
  如果要引用该库：System.loadLibrary("JniTest")
</code></pre></li>
<li><p>LOCAL_SRC_FILES := com_ksnowlv_hellojniforjava_JavaCallJNI</p>

<pre><code>  JNI头文件com_ksnowlv_hellojniforjava_JavaCallJNI.h对应的.c文件
  命名方式：包名+类名+.c
</code></pre></li>
</ul>


<p>在<code>terminal</code>中生成com_ksnowlv_hellojniforjava_JavaCallJNI.h头文件</p>

<pre><code>ksnowlvdeMacBook-Pro:java ksnowlv$ javac com/ksnowlv/   hellojniforjava/JavaCallJNI.java 
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
ksnowlvdeMacBook-Pro:java ksnowlv$ javah -d ../jni  com.ksnowlv.hellojniforjava.JavaCallJNI
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
ksnowlvdeMacBook-Pro:java ksnowlv$ cd ..
</code></pre>

<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-er/jni_header_create.png" alt="image" /></p>

<p>实现文件中内容如下</p>

<pre><code>#include "com_ksnowlv_hellojniforjava_JavaCallJNI.h"

JNIEXPORT jint JNICALL  Java_com_ksnowlv_hellojniforjava_JavaCallJNI_showValue(JNIEnv * enc, jclass cls , jint value) {
    value = value + 1;
    return value;
}
</code></pre>

<h4>4.在jni目录下，创建<code>Application.mk</code>文件</h4>

<p>内容如下：</p>

<pre><code>APP_ABI := all  
</code></pre>

<p>会生成所有主流 ABI 类型的 .so 库</p>

<h4>5.更新在当前模块下build.gradle文件</h4>

<ul>
<li><p><code>defaultConfig</code>下增加ndk配置</p>

<pre><code>  ndk {
      moduleName "JniTest" //System.loadLibrary("JniTest");
  }
</code></pre></li>
<li><p>在buildTypes上面添加<code>jni.srcDirs</code>的配置</p>

<pre><code>  sourceSets {
     main {//建议这里直接使用'libs'目录，
     //因为当使用其他包有.so文件时，一般习惯也是直接拷贝进入libs目录
      jni.srcDirs = ['libs']
    }
  }
</code></pre></li>
</ul>


<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-er/build-gradle.png" alt="image" /></p>

<h4>5.在终端进入jni路径:app/src/main/jni,输入<code>ndk-build</code>即生成各种版本的so</h4>

<pre><code>ksnowlvdeMacBook-Pro:java ksnowlv$ javac com/ksnowlv/   hellojniforjava/JavaCallJNI.java 
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
ksnowlvdeMacBook-Pro:java ksnowlv$ javah -d ../jni  com.ksnowlv.hellojniforjava.JavaCallJNI
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
ksnowlvdeMacBook-Pro:java ksnowlv$ cd ..
ksnowlvdeMacBook-Pro:main ksnowlv$ cd jni
ksnowlvdeMacBook-Pro:jni ksnowlv$ ndk-build
</code></pre>

<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-er/so.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[”mac下android配置jni开发环境(一)“]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/09/macxia-pei-zhi-jnikai-fa-huan-jing-1/"/>
    <updated>2019-04-09T18:39:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/09/macxia-pei-zhi-jnikai-fa-huan-jing-1</id>
    <content type="html"><![CDATA[<p>mac机器上，在进行jni开发之前，android studio 3.3.2，需要配置java环境与ndk环境。</p>

<h3>一.配置java环境参数</h3>

<h4>1.通过<em>which java</em>查看Mac下jdk安装目录</h4>

<pre><code>ksnowlvdeMacBook-Pro:~ ksnowlv$ which java
/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/bin/java
</code></pre>

<p><img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-1/jdk-path.png" alt="image" /></p>

<h4>2.在<em>.bash_profile</em>文件中配置java环境</h4>

<pre><code>JAVA_HOME=/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
PATH=$JAVA_HOME/bin:$PATH:.
CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:.

export JAVA_HOME
export PATH
export CLASSPATH
</code></pre>

<h4>3.保存<em>.bash_profile</em>，并使之生效。</h4>

<pre><code>ksnowlvdeMacBook-Pro:~ ksnowlv$ source .bash_profile

ksnowlvdeMacBook-Pro:~ ksnowlv$ echo $JAVA_HOME
/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home

ksnowlvdeMacBook-Pro:~ ksnowlv$ java -version
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
java version "1.6.0_65"
Java(TM) SE Runtime Environment (build 1.6.0_65-b14-468)
Java HotSpot(TM) 64-Bit Server VM (build 20.65-b04-468, mixed mode)
</code></pre>

<h3>二.配置ndk。</h3>

<h4>1.在<em>.bash_profile</em>文件中配置ndk路径</h4>

<pre><code>export ANDROID_NDK_ROOT=/Users/ksnowlv/Library/Android/sdk/ndk-bundle 
export ANDROID_SDK_ROOT=/Users/ksnowlv/Library/Android/sdk

export PATH=$PATH:$ANDROID_SDK_ROOT  
export PATH=$PATH:$ANDROID_NDK_ROOT 
</code></pre>

<p>ndk路径，sdk路径一定要与实际目录一致，参考下图<br/>
<img src="http://ksnowlv.github.io/images/post/2019-04-09-macxia-pei-zhi-jnikai-fa-huan-jing-1/jdk-path.png" alt="image" /></p>

<h4>2.保存<em>.bash_profile</em>，并使之生效。</h4>

<pre><code>ksnowlvdeMacBook-Pro:~ ksnowlv$ source .bash_profile
ksnowlvdeMacBook-Pro:~ ksnowlv$ echo $ANDROID_NDK_ROOT
/Users/ksnowlv/Library/Android/sdk/ndk-bundle
ksnowlvdeMacBook-Pro:~ ksnowlv$ echo $ANDROID_SDK_ROOT
/Users/ksnowlv/Library/Android/sdk
ksnowlvdeMacBook-Pro:~ ksnowlv$ 
</code></pre>

<h3>三.其它</h3>

<h4>1.为什么不使用jdk-12.jdk？而使用了旧版jdk？</h4>

<p>javah命令在旧版有效。新版可使用javac -h</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[300指数量化基金]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/05/you-xiu-de-liang-hua-ji-jin/"/>
    <updated>2019-04-05T22:13:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/05/you-xiu-de-liang-hua-ji-jin</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th align="center">基金代码 </th>
<th align="center"> 简称 </th>
<th align="center"> 2016超越沪深300指数% </th>
<th align="center"> 2017超越300指数% </th>
<th align="center"> 2018超越300指数%</th>
<th align="center">3年平均收益率%</th>
<th align="center">基金规模</th>
<th align="center">管理托管费%</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"></td>
<td align="center">163497</td>
<td align="center">兴全沪深300指数增强</td>
<td align="center">11.98</td>
<td align="center">10.05</td>
<td align="center">8.36</td>
<td align="center">10.13</td>
<td align="center">20.25亿元|0.95</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">100038</td>
<td align="center">富国沪深300指数增强</td>
<td align="center">6.27</td>
<td align="center">5.3</td>
<td align="center">8.37</td>
<td align="center">6.65</td>
<td align="center">58.83亿元|1.18</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">00012</td>
<td align="center">华安沪深300增强A</td>
<td align="center">8.33</td>
<td align="center">8.95</td>
<td align="center">3.95</td>
<td align="center">7.08</td>
<td align="center">1.75亿元|1.15</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">519116</td>
<td align="center">浦银沪深300增强</td>
<td align="center">6.6</td>
<td align="center">4.36</td>
<td align="center">5.79</td>
<td align="center">5.59</td>
<td align="center">1.11|1.15</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">110030</td>
<td align="center">易方达沪深量化300增强</td>
<td align="center">9.47</td>
<td align="center">8.06</td>
<td align="center">2.15</td>
<td align="center">6.56</td>
<td align="center">9.86|0.95</td>
</tr>
<tr>
<td align="center"> 000887</td>
<td align="center">华泰柏瑞量化优选 </td>
<td align="center"> 13.93 </td>
<td align="center">2.59 </td>
<td align="center">3.03</td>
<td align="center">6.52</td>
<td align="center"> 40.77</td>
<td align="center">1.25</td>
</tr>
</tbody>
</table>


<h3>计划新增兴全沪深300指数增强，易方达沪深量化300增强长期定投</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift call c++（二）]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/01/swift-call-c-plus-plus-%28er%29/"/>
    <updated>2019-04-01T17:35:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/01/swift-call-c-plus-plus-(er)</id>
    <content type="html"><![CDATA[<p>如何在swift调整c++代码呢？</p>

<p><em>swift通过工程的桥接文件，调用oc的代码，间接调用c++代码!!!</em></p>

<h4>1.创建C++ Person类文件：<code>Person.hpp</code>和<code>Person.cpp</code></h4>

<p><code>Person.hpp</code>内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Person.hpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/28.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef Person_hpp</span>
</span><span class='line'><span class="cp">#define Person_hpp</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">Person</span> <span class="p">{</span>
</span><span class='line'><span class="nl">public:</span>
</span><span class='line'>    <span class="n">Person</span><span class="p">();</span>
</span><span class='line'>    <span class="o">~</span><span class="n">Person</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setName</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">name</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setAge</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nl">private:</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">m_age</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* Person_hpp */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Person.cpp</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Person.cpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/28.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;Person.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Person</span><span class="o">::</span><span class="n">Person</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="n">m_age</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">Person</span><span class="o">::~</span><span class="n">Person</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="p">[]</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Person</span><span class="o">::</span><span class="n">setAge</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">m_age</span> <span class="o">=</span> <span class="n">age</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">Person</span><span class="o">::</span><span class="n">age</span><span class="p">()</span><span class="k">const</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_age</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Person</span><span class="o">::</span><span class="n">setName</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="p">[]</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="n">size_t</span> <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">pName</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">new</span> <span class="kt">char</span><span class="p">[</span><span class="n">len</span><span class="p">];</span>
</span><span class='line'>        <span class="n">memset</span><span class="p">(</span><span class="n">m_pName</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>        <span class="n">strcpy</span><span class="p">(</span><span class="n">m_pName</span><span class="p">,</span> <span class="n">pName</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">Person</span><span class="o">::</span><span class="n">name</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.创建oc类文件：<code>PersonExt.h</code>和<code>PersonExt.mm</code></h4>

<p><code>PersonExt.h</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  PersonExt.h</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/4/1.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">NS_ASSUME_NONNULL_BEGIN</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">PersonExt</span> : <span class="nc">NSObject</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">strong</span><span class="p">)</span> <span class="n">NSString</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="n">NSInteger</span> <span class="n">age</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="n">NS_ASSUME_NONNULL_END</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>PersonExt.mm</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  PersonExt.m</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/4/1.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;PersonExt.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;Person.hpp&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">PersonExt</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">Person</span> <span class="o">*</span><span class="n">_person</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">PersonExt</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">init</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_person</span> <span class="o">=</span> <span class="n">new</span> <span class="n">Person</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">dealloc</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="n">_person</span><span class="p">;</span>
</span><span class='line'>        <span class="n">_person</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">name</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_person</span><span class="o">-&gt;</span><span class="n">setName</span><span class="p">([</span><span class="n">name</span> <span class="n">UTF8String</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">name</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="n">_person</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>  <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithUTF8String:</span><span class="n">name</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setAge:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">age</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_person</span><span class="o">-&gt;</span><span class="n">setAge</span><span class="p">((</span><span class="k">const</span> <span class="kt">int</span><span class="p">)</span><span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">age</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_person</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span>  <span class="n">_person</span><span class="o">-&gt;</span><span class="n">age</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3.在桥接文件中,加入<code>PersonExt.h</code>引用：<code>#include "PersonExt.h"</code></h4>

<h4>4.swift中调用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">let</span> <span class="n">personExt</span> <span class="o">=</span> <span class="n">PersonExt</span><span class="p">()</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">age</span> <span class="o">=</span> <span class="n">personExt</span><span class="p">.</span><span class="n">age</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;age =&quot;</span><span class="p">,</span><span class="n">age</span><span class="p">)</span>
</span><span class='line'>    <span class="n">personExt</span><span class="p">.</span><span class="n">age</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'>    <span class="n">age</span> <span class="o">=</span> <span class="n">personExt</span><span class="p">.</span><span class="n">age</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;age =&quot;</span><span class="p">,</span><span class="n">age</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">personExt</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;ksnowlv&quot;</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;name = &quot;</span><span class="p">,</span><span class="n">personExt</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>结果显而易见：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'><span class="n">name</span> <span class="o">=</span>  <span class="n">ksnowlv</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift call c++（一）]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/01/swift-call-c-plus-plus-%28yi%29/"/>
    <updated>2019-04-01T17:23:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/01/swift-call-c-plus-plus-(yi)</id>
    <content type="html"><![CDATA[<p>如何在swift调整c++代码呢？</p>

<p><em>swift通过工程的桥接文件，调用c的代码，间接调用c++代码!!!</em></p>

<h4>1.创建C++ Person类文件：<code>Person.hpp</code>和<code>Person.cpp</code></h4>

<p><code>Person.hpp</code>内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Person.hpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/28.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef Person_hpp</span>
</span><span class='line'><span class="cp">#define Person_hpp</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">Person</span> <span class="p">{</span>
</span><span class='line'><span class="nl">public:</span>
</span><span class='line'>    <span class="n">Person</span><span class="p">();</span>
</span><span class='line'>    <span class="o">~</span><span class="n">Person</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setName</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">name</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">setAge</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">()</span> <span class="k">const</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nl">private:</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">m_age</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* Person_hpp */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Person.cpp</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Person.cpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/28.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;Person.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Person</span><span class="o">::</span><span class="n">Person</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="n">m_age</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">Person</span><span class="o">::~</span><span class="n">Person</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="p">[]</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Person</span><span class="o">::</span><span class="n">setAge</span><span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">m_age</span> <span class="o">=</span> <span class="n">age</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">Person</span><span class="o">::</span><span class="n">age</span><span class="p">()</span><span class="k">const</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_age</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Person</span><span class="o">::</span><span class="n">setName</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">delete</span> <span class="p">[]</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="n">size_t</span> <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">pName</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">m_pName</span> <span class="o">=</span> <span class="n">new</span> <span class="kt">char</span><span class="p">[</span><span class="n">len</span><span class="p">];</span>
</span><span class='line'>        <span class="n">memset</span><span class="p">(</span><span class="n">m_pName</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>        <span class="n">strcpy</span><span class="p">(</span><span class="n">m_pName</span><span class="p">,</span> <span class="n">pName</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">Person</span><span class="o">::</span><span class="n">name</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_pName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.创建c类文件：<code>PersonExtension.hpp</code>和<code>PersonExtension.cpp</code></h4>

<p><code>PersonExtension.hpp</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  PersonExtension.hpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/29.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef PersonExtension_hpp</span>
</span><span class='line'><span class="cp">#define PersonExtension_hpp</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span><span class="p">{</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>    <span class="c1">//在这里写上c的代码</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//初始化一个Person的实例</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span> <span class="n">createPerson</span><span class="p">();</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="nf">destroyPerson</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="nf">setPersonAge</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">int</span> <span class="nf">personAge</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="nf">setPersonName</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">personName</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* PersonExtension_hpp */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>PersonExtension.cpp</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  PersonExtension.cpp</span>
</span><span class='line'><span class="c1">//  SwiftCallC</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by ksnowlv on 2019/3/29.</span>
</span><span class='line'><span class="c1">//  Copyright © 2019 ksnowlv. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;PersonExtension.hpp&quot;</span>
</span><span class='line'><span class="cp">#include &quot;Person.hpp&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span> <span class="nf">createPerson</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Person</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="n">new</span> <span class="n">Person</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="nf">destroyPerson</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="n">delete</span> <span class="n">person</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="nf">setPersonAge</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">,</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">age</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="n">person</span><span class="o">-&gt;</span><span class="n">setAge</span><span class="p">(</span><span class="n">age</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="nf">personAge</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">person</span><span class="o">-&gt;</span><span class="n">age</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">void</span> <span class="nf">setPersonName</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="n">person</span><span class="o">-&gt;</span><span class="n">setName</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="nf">personName</span><span class="p">(</span><span class="kt">void</span><span class="o">*</span> <span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">Person</span> <span class="o">*</span><span class="n">person</span> <span class="o">=</span> <span class="p">(</span><span class="n">Person</span><span class="o">*</span><span class="p">)</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">person</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">nullptr</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3.在桥接文件中,加入<code>PersonExtension.hpp</code>引用：<code>#include "PersonExtension.hpp""</code></h4>

<h4>4.swift中调用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>      <span class="n">let</span> <span class="n">person</span> <span class="o">=</span> <span class="n">UnsafeMutableRawPointer</span><span class="p">(</span><span class="nl">mutating:</span> <span class="n">createPerson</span><span class="p">())</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;age =&quot;</span><span class="p">,</span><span class="n">personAge</span><span class="p">(</span><span class="n">person</span><span class="p">))</span>
</span><span class='line'>      <span class="n">setPersonAge</span><span class="p">(</span><span class="n">person</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;age =&quot;</span><span class="p">,</span><span class="n">personAge</span><span class="p">(</span><span class="n">person</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">setPersonName</span><span class="p">(</span><span class="n">person</span><span class="p">,</span> <span class="s">&quot;ksnowlv&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">let</span> <span class="nl">nameBuf:</span><span class="n">UnsafePointer</span><span class="o">&lt;</span><span class="n">Int8</span><span class="o">&gt;</span> <span class="o">=</span> <span class="n">personName</span><span class="p">(</span><span class="n">person</span><span class="p">)</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;name = &quot;</span><span class="p">,</span><span class="n">String</span><span class="p">(</span><span class="nl">cString:</span> <span class="n">nameBuf</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">destroyPerson</span><span class="p">(</span><span class="n">person</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>结果显而易见：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="n">name</span> <span class="o">=</span>  <span class="n">ksnowlv</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift call c]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/04/01/swift-call-c/"/>
    <updated>2019-04-01T16:13:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/04/01/swift-call-c</id>
    <content type="html"><![CDATA[<p>如何在swift调整c代码呢？</p>

<p><em>swift通过工程的桥接文件，调用oc或c的相关代码!!!</em></p>

<h4>1.创建c文件：<code>test.h</code>和<code>test.c</code></h4>

<p><code>test.h</code>内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#ifndef test_h</span>
</span><span class='line'><span class="cp">#define test_h</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">showValue</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* test_h */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>test.c</code>内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#include &quot;test.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">showValue</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;old value = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'>    <span class="o">*</span><span class="n">value</span> <span class="o">=</span> <span class="o">*</span><span class="n">value</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;new value = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="o">*</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.在桥接文件中,加入<code>test.h</code>引用：<code>#include "test.h"</code></h4>

<h4>3.swift中调用</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>   <span class="n">var</span> <span class="nl">value:</span> <span class="n">Int32</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>   <span class="n">showValue</span><span class="p">(</span><span class="o">&amp;</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>结果显而易见：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">old</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">new</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[go变量声明和使用]]></title>
    <link href="http://ksnowlv.github.io/blog/2019/02/01/gobian-liang/"/>
    <updated>2019-02-01T16:31:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2019/02/01/gobian-liang</id>
    <content type="html"><![CDATA[<p>go变量声明和使用</p>

<p>···objective-c</p>

<p>package main</p>

<p>import &ldquo;fmt&rdquo;</p>

<p>var x, y int</p>

<p>var (</p>

<pre><code>a int
b bool
</code></pre>

<p>)</p>

<p>var c, d int = 1, 2</p>

<p>var e, f = 123, &ldquo;hello&rdquo;</p>

<p>func main() {</p>

<pre><code>//这咱不带声明格式的用法，只能出现在函数休内
g, h := 123, "hello"

println(x, y, a, b, c, d, e, f, g, h)

var testString string = "hello world!"

fmt.Println(testString)

var a, b int

a, b = 5, 7

println("a=", a, "b=", b)

a, b = b, a

println("a和b交换后 a=", a, "b=", b)
</code></pre>

<p>}</p>

<p>···</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift中pthread_t之mutex]]></title>
    <link href="http://ksnowlv.github.io/blog/2018/08/07/swiftzhong-pthread-tzhi-mutex/"/>
    <updated>2018-08-07T18:37:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2018/08/07/swiftzhong-pthread-tzhi-mutex</id>
    <content type="html"><![CDATA[<p>mutex类型有四种</p>

<ul>
<li>PTHREAD_MUTEX_NORMAL</li>
<li>PTHREAD_MUTEX_ERRORCHECK</li>
<li>PTHREAD_MUTEX_RECURSIVE</li>
<li>PTHREAD_MUTEX_DEFAULT</li>
</ul>


<h5>1.mutex初始化。</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="n">var</span> <span class="n">mutex</span> <span class="o">=</span> <span class="n">pthread_mutex_t</span><span class="p">()</span>
</span><span class='line'> <span class="n">var</span> <span class="nl">attr:</span> <span class="n">pthread_mutexattr_t</span> <span class="o">=</span> <span class="n">pthread_mutexattr_t</span><span class="p">()</span>
</span><span class='line'> <span class="n">pthread_mutexattr_init</span><span class="p">(</span><span class="o">&amp;</span><span class="n">attr</span><span class="p">)</span>
</span><span class='line'> <span class="n">pthread_mutexattr_settype</span><span class="p">(</span><span class="o">&amp;</span><span class="n">attr</span><span class="p">,</span> <span class="n">PTHREAD_MUTEX_RECURSIVE</span><span class="p">)</span>
</span><span class='line'> <span class="n">pthread_mutex_init</span><span class="p">(</span><span class="o">&amp;</span><span class="n">mutex</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">attr</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h5>2.mutex使用。</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="n">pthread_mutex_trylock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">mutex</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">//执行代码块</span>
</span><span class='line'> <span class="n">pthread_mutex_unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="n">mutex</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h5>3.mutex释放。</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">pthread_mutex_destroy</span><span class="p">(</span><span class="o">&amp;</span><span class="n">mutex</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[synchronized到objc_sync_enter/objc_sync_exit]]></title>
    <link href="http://ksnowlv.github.io/blog/2018/08/07/swiftzhong-yu-oczhong-yong-fa-qu-bie/"/>
    <updated>2018-08-07T17:18:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2018/08/07/swiftzhong-yu-oczhong-yong-fa-qu-bie</id>
    <content type="html"><![CDATA[<p><code>synchronized</code>&ndash;><code>objc_sync_enter/objc_sync_exit</code></p>

<p><code>objc_sync_enter</code>：递归锁，与objc_sync_exit配合使用，注意死锁</p>

<ul>
<li>Begin synchronizing on &lsquo;obj&rsquo;. Allocates recursive pthread_mutex associated with &lsquo;obj&rsquo; if needed.</li>
<li>Parameters  <br/>
  obj
  The object to begin synchronizing on.</li>
<li>Returns <br/>
OBJC_SYNC_SUCCESS once lock is acquired.</li>
</ul>


<p><code>objc_sync_exit</code></p>

<ul>
<li>End synchronizing on &lsquo;obj&rsquo;.</li>
<li>Parameters  <br/>
  obj
  The object to end synchronizing on.</li>
<li>Returns <br/>
OBJC_SYNC_SUCCESS or OBJC_SYNC_NOT_OWNING_THREAD_ERROR</li>
</ul>


<p>示例如下：</p>

<p> &#8220;`objective-c
   let lockValue = 0
   objc_sync_enter(lockValue)</p>

<pre><code>    //执行代码块
</code></pre>

<p>   objc_sync_exit(lockValue)
 &#8220;`</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[全局并发队列优先级]]></title>
    <link href="http://ksnowlv.github.io/blog/2018/07/24/quan-ju-bing-fa-dui-lie-you-xian-ji/"/>
    <updated>2018-07-24T14:23:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2018/07/24/quan-ju-bing-fa-dui-lie-you-xian-ji</id>
    <content type="html"><![CDATA[<p>全局并发队（Global Queue）</p>

<ul>
<li><p>老版gcd有四种：<code>high</code>，<code>default</code>，<code>low</code>，<code>background</code>，</p>

<p>  优先级为：high>default>low>background</p></li>
<li><p>新版gcd有六种：<code>background</code>，<code>utility</code>，<code>default</code>，<code>userInitiated</code>，<code>userInteractive</code>，<code>unspecified</code></p>

<p>  优先级为：userInteractive>default>unspecified>userInitiated>utility>background</p>

<p>  测试代码如下：</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mf">1.</span><span class="p">.</span><span class="mf">.3</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">global</span><span class="p">(</span><span class="nl">qos:</span> <span class="n">DispatchQoS</span><span class="p">.</span><span class="n">QoSClass</span><span class="p">.</span><span class="k">default</span><span class="p">).</span><span class="n">async</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">&quot;DispatchQoS.QoSClass.default, %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">global</span><span class="p">(</span><span class="nl">qos:</span> <span class="n">DispatchQoS</span><span class="p">.</span><span class="n">QoSClass</span><span class="p">.</span><span class="n">background</span><span class="p">).</span><span class="n">async</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">&quot;DispatchQoS.QoSClass.background, %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">global</span><span class="p">(</span><span class="nl">qos:</span> <span class="n">DispatchQoS</span><span class="p">.</span><span class="n">QoSClass</span><span class="p">.</span><span class="n">unspecified</span><span class="p">).</span><span class="n">async</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">&quot;DispatchQoS.QoSClass.unspecified, %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">global</span><span class="p">(</span><span class="nl">qos:</span> <span class="n">DispatchQoS</span><span class="p">.</span><span class="n">QoSClass</span><span class="p">.</span><span class="n">userInitiated</span><span class="p">).</span><span class="n">async</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">&quot;DispatchQoS.QoSClass.userInitiated, %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">global</span><span class="p">(</span><span class="nl">qos:</span> <span class="n">DispatchQoS</span><span class="p">.</span><span class="n">QoSClass</span><span class="p">.</span><span class="n">userInteractive</span><span class="p">).</span><span class="n">async</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">&quot;DispatchQoS.QoSClass.userInteractive, %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">global</span><span class="p">(</span><span class="nl">qos:</span> <span class="n">DispatchQoS</span><span class="p">.</span><span class="n">QoSClass</span><span class="p">.</span><span class="n">utility</span><span class="p">).</span><span class="n">async</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">&quot;DispatchQoS.QoSClass.utility, %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p> 输出日志：</p>

<p> &#8220;`objective-c</p>

<p>2018-07-24 15:04:12.619688+0800 YKBaseSwiftFramework[8252:505814] DispatchQoS.QoSClass.userInteractive, 3
2018-07-24 15:04:12.619688+0800 YKBaseSwiftFramework[8252:505813] DispatchQoS.QoSClass.userInteractive, 2
2018-07-24 15:04:12.619688+0800 YKBaseSwiftFramework[8252:505825] DispatchQoS.QoSClass.userInteractive, 1
2018-07-24 15:04:12.619716+0800 YKBaseSwiftFramework[8252:505820] DispatchQoS.QoSClass.default, 1
2018-07-24 15:04:12.619735+0800 YKBaseSwiftFramework[8252:505815] DispatchQoS.QoSClass.unspecified, 1
2018-07-24 15:04:12.619741+0800 YKBaseSwiftFramework[8252:505828] DispatchQoS.QoSClass.userInitiated, 1
2018-07-24 15:04:12.620001+0800 YKBaseSwiftFramework[8252:505830] DispatchQoS.QoSClass.default, 2
2018-07-24 15:04:12.620003+0800 YKBaseSwiftFramework[8252:505814] DispatchQoS.QoSClass.unspecified, 2
2018-07-24 15:04:12.620065+0800 YKBaseSwiftFramework[8252:505831] DispatchQoS.QoSClass.userInitiated, 2
2018-07-24 15:04:12.620101+0800 YKBaseSwiftFramework[8252:505832] DispatchQoS.QoSClass.default, 3
2018-07-24 15:04:12.620122+0800 YKBaseSwiftFramework[8252:505834] DispatchQoS.QoSClass.userInitiated, 3
2018-07-24 15:04:12.620133+0800 YKBaseSwiftFramework[8252:505833] DispatchQoS.QoSClass.unspecified, 3
2018-07-24 15:04:12.620143+0800 YKBaseSwiftFramework[8252:505827] DispatchQoS.QoSClass.utility, 1
2018-07-24 15:04:12.620286+0800 YKBaseSwiftFramework[8252:505829] DispatchQoS.QoSClass.utility, 2
2018-07-24 15:04:12.620343+0800 YKBaseSwiftFramework[8252:505835] DispatchQoS.QoSClass.utility, 3
2018-07-24 15:04:12.622419+0800 YKBaseSwiftFramework[8252:505824] DispatchQoS.QoSClass.background, 1
2018-07-24 15:04:12.622904+0800 YKBaseSwiftFramework[8252:505832] DispatchQoS.QoSClass.background, 2
2018-07-24 15:04:12.622998+0800 YKBaseSwiftFramework[8252:505831] DispatchQoS.QoSClass.background, 3</p>

<p> &#8220;`</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[直播协议对比]]></title>
    <link href="http://ksnowlv.github.io/blog/2018/07/23/zhi-bo-xie-yi-dui-bi/"/>
    <updated>2018-07-23T16:45:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2018/07/23/zhi-bo-xie-yi-dui-bi</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th></th>
<th>直播协议</th>
<th>优势</th>
<th>劣势</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> RTP /RTCP</td>
<td>RTP 实行有序传送,RTP中的序列号允许接收方重组发送方的包序列，同时序列号也能用于决定适当的包位置，如在视频解码中，就不需要顺序解码。RTCP的主要功能是为RTP所提供的服务质量提供反馈，例如：RTP传输字节数，传输分组数，丢失分组数，单向和双向网络延迟等。网络应用程序可以利用RTCP所提供的信息来提高服务质量，比如限制流量或改用压缩比小的编解码器</td>
<td>RTP载荷的最大尺寸为1460字 节。以H264 为例，如果一帧数据大于1460，则需要分片打包，然后到接收端再拆包，组合成一帧数据，进行解码播放。|</td>
</tr>
<tr>
<td></td>
<td>RTSP:(Real Time Streaming Protocol)实时流协议</td>
<td>RTSP 是一种双向实时数据传输协议，它允许客户端向服务器端发送请求，如回放、快进、倒退等操作。而且，RTSP 可基于RTP 来传送数据，还可以选择 TCP、UDP、组播 UDP 等通道来发送数据，具有很好的扩展性</td>
<td>1.服务端实现复杂。2.代理服务器弱：数量少，优化少3. 无路由器防火墙穿透。4. 管流分离：需要1-3个通道|</td>
</tr>
<tr>
<td></td>
<td>RTMP协议(Real Time Messaging Protocol)实时消息传输协议</td>
<td>RTMP是Adobe Systems公司为Flash播放器和服务器之间音频、视频和数据传输开发的开放协议。该协议基于TCP，RTMP是一种设计用来进行实时数据通信的网络协议，主要用来在Flash/AIR平台和支持RTMP协议的流媒体/交互服务器之间进行音视频和数据通信。1.速度快，误码率低，延迟低 。2.RTMP 是专为流媒体服务而生，协议在制定的时候就考虑到很多底层的优化3.消息块的传输能够提供更加稳定的直播环境，在硬件上要求会更高，但是却能够缓解http的繁琐的传输介质</td>
<td>1.不支持Html5传播、浏览器推送 2.基于TCP协议,虽然开发难度大，推广度还不够，对于开发人员来说门槛比较高 3.硬件要求相较于HLS较高。 4. 协议复杂：开发者写起来累，效率也不行。5.Cache麻烦：流协议做缓存不方便。|</td>
</tr>
<tr>
<td></td>
<td>HTTP-FLV协议</td>
<td>FLV协议由Adobe公司主推，即将音视频数据封装成 FLV，然后通过 HTTP 协议传输给客户端，格式极其简单，只是在大块的视频帧和音视频头部加入一些标记头信息，在延迟表现和大规模并发方面都很成熟。但是在手机浏览器上的支持非常有限，但是用作手机端APP直播协议却异常合适。</td>
<td>1.需要http长连接 2.h5中需要使用插件。3.需要flash技术支持，不支持多音频流，多视频流，不便于拖动|</td>
</tr>
<tr>
<td></td>
<td>HLS协议</td>
<td>HLS协议苹果推出，将视频分成5-10秒的视频小分片，然后用m3u8索引表进行管理，由于客户端下载到的视频都是5-10秒的完整数据，故视频的流畅性很好，但也同样引入了很大的延迟(HLS的一般延迟在10-30s左右)。实际上还是纯“文本协议”相比于FLV，HLS在iPhone和大部分android手机浏览器上的支持非常给力。HLS协议客户端支持简单, 只需要支持 HTTP 请求即可, HTTP 协议无状态, 只需要按顺序下载媒体片段即可，而且网络兼容性好, HTTP 数据包也可以方便地通过防火墙或者代理服务器。但是相比RTMP 这类长连接协议, 用到互动直播场景延时较高。</td>
<td>相比 RTMP 这类长连接协议, 延时较高, 难以用到直播场景。对于点播服务来说, 由于 TS 切片通常较小, 海量碎片在文件分发, 一致性缓存, 存储等方面都有较大挑战，小文件碎片化严重|</td>
</tr>
</tbody>
</table>


<p>直播协议hls，rtmp，http flv，rtsp</p>

<table>
<thead>
<tr>
<th></th>
<th>协议</th>
<th>传输方式</th>
<th>视频封装格式</th>
<th>延时</th>
<th>数据分段</th>
<th> HTML5直播</th>
<th>应用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>HLS</td>
<td>Http流</td>
<td>ts文件</td>
<td>10~30s</td>
<td>切片</td>
<td>支持</td>
<td>H5直播，游戏直播</td>
</tr>
<tr>
<td></td>
<td> RTMP </td>
<td>tcp流</td>
<td>flv tag</td>
<td>2s~5s</td>
<td>连续流</td>
<td>不支持</td>
<td>互动直播|</td>
</tr>
<tr>
<td></td>
<td>http flv</td>
<td>HTTP流</td>
<td>flv</td>
<td>2s~5s，优于rtmp</td>
<td>连续流</td>
<td>支持</td>
<td>互动直播|</td>
</tr>
<tr>
<td></td>
<td>rtsp</td>
<td>tcp/udp流</td>
<td>flv</td>
<td>一般做到500ms以下</td>
<td>连续流</td>
<td>不支持</td>
<td>互动直播|</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift-ecdh]]></title>
    <link href="http://ksnowlv.github.io/blog/2018/07/20/swift-ecdh/"/>
    <updated>2018-07-20T19:28:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2018/07/20/swift-ecdh</id>
    <content type="html"><![CDATA[<p>swift 在iOS10之后，支持ecdh加解密。</p>

<h4>1.生成公钥和私钥。</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>   <span class="n">func</span> <span class="nf">generateKey</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="nl">attributes:</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">kSecAttrKeySizeInBits</span> <span class="n">as</span> <span class="nl">String:</span> <span class="mi">256</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">kSecAttrKeyType</span> <span class="n">as</span> <span class="nl">String:</span> <span class="n">kSecAttrKeyTypeEC</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">kSecPrivateKeyAttrs</span> <span class="n">as</span> <span class="nl">String:</span> <span class="p">[</span><span class="n">kSecAttrIsPermanent</span> <span class="n">as</span> <span class="nl">String:</span> <span class="n">false</span><span class="p">]]</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">error:</span> <span class="n">Unmanaged</span><span class="o">&lt;</span><span class="n">CFError</span><span class="o">&gt;?</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">privateKey</span> <span class="o">=</span> <span class="n">SecKeyCreateRandomKey</span><span class="p">(</span><span class="n">attributes</span> <span class="n">as</span> <span class="n">CFDictionary</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">self</span><span class="p">.</span><span class="n">privateKey</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">publicKey</span> <span class="o">=</span> <span class="n">SecKeyCopyPublicKey</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">privateKey</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2.加密</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="n">encryptedData</span><span class="p">(</span><span class="nl">sourceData:</span> <span class="n">Data</span><span class="p">,</span> <span class="nl">algorithm:</span><span class="n">SecKeyAlgorithm</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Data</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">self</span><span class="p">.</span><span class="n">publicKey</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">error:</span> <span class="n">Unmanaged</span><span class="o">&lt;</span><span class="n">CFError</span><span class="o">&gt;?</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">encrypted</span> <span class="o">=</span>
</span><span class='line'>            <span class="n">SecKeyCreateEncryptedData</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">publicKey</span><span class="o">!</span><span class="p">,</span> <span class="n">algorithm</span><span class="p">,</span>
</span><span class='line'>                                      <span class="n">sourceData</span> <span class="n">as</span> <span class="n">CFData</span><span class="p">,</span>
</span><span class='line'>                                      <span class="o">&amp;</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">error</span> <span class="o">==</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">encrypted</span><span class="o">!</span> <span class="n">as</span> <span class="n">Data</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>3.解密</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>   <span class="n">func</span> <span class="n">decryptedData</span><span class="p">(</span><span class="nl">sourceData:</span> <span class="n">Data</span><span class="p">,</span> <span class="nl">algorithm:</span><span class="n">SecKeyAlgorithm</span> <span class="p">)</span> <span class="o">-&gt;</span> <span class="n">String</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">error:</span> <span class="n">Unmanaged</span><span class="o">&lt;</span><span class="n">CFError</span><span class="o">&gt;?</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">resData</span> <span class="o">=</span> <span class="n">SecKeyCreateDecryptedData</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">privateKey</span><span class="o">!</span> <span class="p">,</span> <span class="n">algorithm</span><span class="p">,</span>
</span><span class='line'>                                                <span class="n">sourceData</span> <span class="n">as</span> <span class="n">CFData</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">error</span> <span class="o">==</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">String</span><span class="p">(</span><span class="nl">data:</span> <span class="n">resData</span><span class="o">!</span> <span class="n">as</span> <span class="n">Data</span><span class="p">,</span> <span class="nl">encoding:</span> <span class="n">String</span><span class="p">.</span><span class="n">Encoding</span><span class="p">.</span><span class="n">utf8</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>4.示例</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>    <span class="n">let</span> <span class="n">sign</span> <span class="o">=</span> <span class="n">YKEcdhSign</span><span class="p">()</span>
</span><span class='line'>        <span class="n">sign</span><span class="p">.</span><span class="n">generateKey</span><span class="p">()</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">enData</span> <span class="o">=</span>  <span class="n">sign</span><span class="p">.</span><span class="n">encryptedData</span><span class="p">(</span><span class="nl">sourceData:</span> <span class="n">originalData</span><span class="o">!</span><span class="p">,</span> <span class="nl">algorithm:</span> <span class="n">SecKeyAlgorithm</span><span class="p">.</span><span class="n">eciesEncryptionStandardX963SHA512AESGCM</span><span class="p">)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">string</span> <span class="o">=</span> <span class="n">sign</span><span class="p">.</span><span class="n">decryptedData</span><span class="p">(</span><span class="nl">sourceData:</span> <span class="n">enData</span><span class="o">!</span><span class="p">,</span> <span class="nl">algorithm:</span> <span class="n">SecKeyAlgorithm</span><span class="p">.</span><span class="n">eciesEncryptionStandardX963SHA512AESGCM</span><span class="p">)</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="n">string</span><span class="o">!</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift-RSA(五)-签名/验签]]></title>
    <link href="http://ksnowlv.github.io/blog/2018/07/19/swift-rsa-5/"/>
    <updated>2018-07-19T17:53:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2018/07/19/swift-rsa-5</id>
    <content type="html"><![CDATA[<p>RSA支持加解密，也支持签名/验签。
使用rsa如何签名/验签呢？</p>

<h4>1.rsa 签名</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">@</span><span class="n">objc</span> <span class="n">public</span> <span class="n">func</span> <span class="n">sign</span><span class="p">(</span><span class="nl">source:</span> <span class="n">Data</span><span class="p">,</span> <span class="nl">padding:</span> <span class="n">SecPadding</span> <span class="o">=</span> <span class="n">SecPadding</span><span class="p">.</span><span class="n">PKCS1SHA1</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Data</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">guard</span> <span class="n">source</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">self</span><span class="p">.</span><span class="n">privateSecKey</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">let</span> <span class="nl">hashData:</span> <span class="n">NSData</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">switch</span> <span class="n">padding</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA1:</span>
</span><span class='line'>        <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha1</span><span class="p">)</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA224:</span>
</span><span class='line'>        <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha224</span><span class="p">)</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA256:</span>
</span><span class='line'>        <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha256</span><span class="p">)</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA384:</span>
</span><span class='line'>        <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha384</span><span class="p">)</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA512:</span>
</span><span class='line'>        <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha512</span><span class="p">)</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span><span class="k">do</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="s">&quot;not support this type sign!&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">let</span> <span class="n">blockLen</span> <span class="o">=</span>  <span class="n">SecKeyGetBlockSize</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">privateSecKey</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">outBuf</span> <span class="o">=</span> <span class="p">[</span><span class="n">UInt8</span><span class="p">](</span><span class="nl">repeating:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">count:</span> <span class="n">blockLen</span><span class="p">)</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">outBufLen:</span><span class="n">Int</span> <span class="o">=</span> <span class="n">blockLen</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">let</span> <span class="nl">status:</span> <span class="n">OSStatus</span> <span class="o">=</span> <span class="n">SecKeyRawSign</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">privateSecKey</span><span class="o">!</span><span class="p">,</span> <span class="n">padding</span><span class="p">,</span> <span class="n">hashData</span><span class="o">!</span><span class="p">.</span><span class="n">bytes</span><span class="p">.</span><span class="n">assumingMemoryBound</span><span class="p">(</span><span class="nl">to:</span> <span class="n">UInt8</span><span class="p">.</span><span class="n">self</span><span class="p">),</span> <span class="n">hashData</span><span class="o">!</span><span class="p">.</span><span class="n">length</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">outBuf</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">outBufLen</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="n">noErr</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">Data</span><span class="p">(</span><span class="nl">bytes:</span> <span class="n">outBuf</span><span class="p">,</span> <span class="nl">count:</span> <span class="n">outBufLen</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="s">&quot;sign status = \(status)&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>2.rsa 验签</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">@</span><span class="n">objc</span> <span class="n">public</span> <span class="n">func</span> <span class="n">verify</span><span class="p">(</span><span class="nl">source:</span> <span class="n">Data</span><span class="p">,</span> <span class="nl">signData:</span><span class="n">Data</span><span class="p">,</span><span class="nl">padding:</span> <span class="n">SecPadding</span> <span class="o">=</span> <span class="n">SecPadding</span><span class="p">.</span><span class="n">PKCS1SHA1</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">source</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">signData</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">self</span><span class="p">.</span><span class="n">publicSecKey</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">false</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="nl">hashData:</span> <span class="n">NSData</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">switch</span> <span class="n">padding</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA1:</span>
</span><span class='line'>            <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha1</span><span class="p">)</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA224:</span>
</span><span class='line'>            <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha224</span><span class="p">)</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA256:</span>
</span><span class='line'>            <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha256</span><span class="p">)</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA384:</span>
</span><span class='line'>            <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha384</span><span class="p">)</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1SHA512:</span>
</span><span class='line'>            <span class="n">hashData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span>  <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">shaWithType</span><span class="p">(</span><span class="nl">shaType:</span> <span class="n">YKShaType</span><span class="p">.</span><span class="n">sha512</span><span class="p">)</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">default</span><span class="o">:</span><span class="k">do</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="s">&quot;not support this type sign!&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">false</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="nl">signBuf:</span> <span class="n">UnsafePointer</span><span class="o">&lt;</span><span class="n">UInt8</span><span class="o">&gt;</span> <span class="o">=</span> <span class="p">(</span><span class="n">signData</span> <span class="n">as</span> <span class="n">NSData</span><span class="p">).</span><span class="n">bytes</span><span class="p">.</span><span class="n">assumingMemoryBound</span><span class="p">(</span><span class="nl">to:</span> <span class="n">UInt8</span><span class="p">.</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">blockLen</span> <span class="o">=</span>  <span class="n">SecKeyGetBlockSize</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">publicSecKey</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="nl">status:</span> <span class="n">OSStatus</span> <span class="o">=</span> <span class="n">SecKeyRawVerify</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">publicSecKey</span><span class="o">!</span><span class="p">,</span>
</span><span class='line'>                                               <span class="n">padding</span><span class="p">,</span>
</span><span class='line'>                                               <span class="n">hashData</span><span class="o">!</span><span class="p">.</span><span class="n">bytes</span><span class="p">.</span><span class="n">assumingMemoryBound</span><span class="p">(</span><span class="nl">to:</span> <span class="n">UInt8</span><span class="p">.</span><span class="n">self</span><span class="p">),</span>
</span><span class='line'>                                               <span class="n">hashData</span><span class="o">!</span><span class="p">.</span><span class="n">length</span><span class="p">,</span>
</span><span class='line'>                                               <span class="n">signBuf</span><span class="p">,</span>
</span><span class='line'>                                               <span class="n">blockLen</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="n">noErr</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="s">&quot;sign status = \(status)&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">false</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>3.调用</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//原始数据</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">originalString</span> <span class="o">=</span> <span class="s">&quot;你从哪里来，要去哪里去，在你眼里，春天里，我们去了哪里啊，123456789，说不说都不知道，黄河之水天上来，奔流到海不复回。高堂明镜悲白发，朝如青丝，ksnowlv&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//let originalString = &quot;123456helloworld&quot;</span>
</span><span class='line'>        <span class="n">let</span> <span class="nl">publicKeyPath:</span><span class="n">String</span> <span class="o">=</span>   <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;public_key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;der&quot;</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">privateKeyPath</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;private_key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;p12&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="s">&quot;publicKeyPath = \(publicKeyPath)&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="s">&quot;privateKeyPath = \(String(describing: privateKeyPath))&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="nl">rsaSign:</span><span class="n">YKRSASign</span> <span class="o">=</span> <span class="n">YKRSASign</span><span class="p">()</span>
</span><span class='line'>        <span class="n">rsaSign</span><span class="p">.</span><span class="n">publicKey</span><span class="p">(</span><span class="nl">fileFullPath:</span> <span class="n">publicKeyPath</span> <span class="n">as</span> <span class="n">NSString</span><span class="p">,</span> <span class="nl">block:</span> <span class="p">{(</span><span class="n">_</span> <span class="nl">error:</span> <span class="n">NSError</span><span class="o">?</span><span class="p">,</span> <span class="n">_</span> <span class="nl">secKey:</span><span class="n">SecKey</span><span class="o">?</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">rsaSign</span><span class="p">.</span><span class="n">privateKey</span><span class="p">(</span><span class="nl">fileFullPath:</span> <span class="n">privateKeyPath</span><span class="o">!</span> <span class="n">as</span> <span class="n">NSString</span><span class="p">,</span> <span class="nl">password:</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="nl">block:</span> <span class="p">{(</span><span class="n">_</span> <span class="nl">error:</span> <span class="n">NSError</span><span class="o">?</span><span class="p">,</span> <span class="n">_</span> <span class="nl">secKey:</span><span class="n">SecKey</span><span class="o">?</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">originalData</span> <span class="o">=</span> <span class="n">originalString</span><span class="p">.</span><span class="n">data</span><span class="p">(</span><span class="nl">using:</span> <span class="n">String</span><span class="p">.</span><span class="n">Encoding</span><span class="p">(</span><span class="nl">rawValue:</span> <span class="n">String</span><span class="p">.</span><span class="n">Encoding</span><span class="p">.</span><span class="n">utf8</span><span class="p">.</span><span class="n">rawValue</span><span class="p">))</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">signData</span> <span class="o">=</span> <span class="n">rsaSign</span><span class="p">.</span><span class="n">sign</span><span class="p">(</span><span class="nl">source:</span> <span class="n">originalData</span><span class="o">!</span><span class="p">,</span> <span class="nl">padding:</span> <span class="n">SecPadding</span><span class="p">.</span><span class="n">PKCS1SHA512</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">isVerify</span> <span class="o">=</span> <span class="n">rsaSign</span><span class="p">.</span><span class="n">verify</span><span class="p">(</span><span class="nl">source:</span> <span class="n">originalData</span><span class="o">!</span><span class="p">,</span> <span class="nl">signData:</span> <span class="n">signData</span><span class="o">!</span><span class="p">,</span> <span class="nl">padding:</span> <span class="n">SecPadding</span><span class="p">.</span><span class="n">PKCS1SHA512</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">isVerify</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="s">&quot;验证签名通过&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="s">&quot;验证签名失败&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift-rsa(四)-OAEP模式]]></title>
    <link href="http://ksnowlv.github.io/blog/2018/07/19/swift-rsa-4/"/>
    <updated>2018-07-19T14:26:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2018/07/19/swift-rsa-4</id>
    <content type="html"><![CDATA[<p>swift进行RSA加解密时，如果使用 <code>OAEP</code>时，有什么区别？</p>

<h5>1.RSA加密</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="err">@</span><span class="n">objc</span> <span class="n">public</span> <span class="n">func</span> <span class="n">encrypt</span><span class="p">(</span><span class="nl">source:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">padding:</span> <span class="n">SecPadding</span> <span class="o">=</span> <span class="n">SecPadding</span><span class="p">.</span><span class="n">PKCS1</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">guard</span> <span class="n">source</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">self</span><span class="p">.</span><span class="n">publicSecKey</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">let</span> <span class="nl">data:</span> <span class="n">NSData</span> <span class="o">=</span> <span class="p">(</span><span class="n">source</span><span class="p">.</span><span class="n">data</span><span class="p">(</span><span class="nl">using:</span> <span class="n">String</span><span class="p">.</span><span class="n">Encoding</span><span class="p">.</span><span class="n">utf8</span><span class="p">)</span><span class="o">!</span> <span class="n">as</span> <span class="n">NSData</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'> <span class="cm">/*       if #available(iOS 10.0, *) {</span>
</span><span class='line'><span class="cm">        var error: Unmanaged&lt;CFError&gt;?</span>
</span><span class='line'><span class="cm">        resData =  SecKeyCreateEncryptedData(self.publicSecKey!, SecKeyAlgorithm.rsaEncryptionPKCS1, data as CFData, &amp;error)</span>
</span><span class='line'>
</span><span class='line'><span class="cm">        print(&quot;res = \(String(describing: error?.takeUnretainedValue().localizedDescription))&quot;)</span>
</span><span class='line'><span class="cm">    }</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'>    <span class="c1">// Fallback on earlier versions</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">blockLen</span> <span class="o">=</span>  <span class="n">SecKeyGetBlockSize</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">publicSecKey</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">outBuf</span> <span class="o">=</span> <span class="p">[</span><span class="n">UInt8</span><span class="p">](</span><span class="nl">repeating:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">count:</span> <span class="n">blockLen</span><span class="p">)</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">outBufLen:</span><span class="n">Int</span> <span class="o">=</span> <span class="n">blockLen</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">totalLen</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">length</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">let</span> <span class="n">resData</span> <span class="o">=</span> <span class="n">NSMutableData</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">blockMaxLen</span> <span class="o">=</span> <span class="n">blockLen</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">switch</span> <span class="n">padding</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">PKCS1:</span>
</span><span class='line'>        <span class="n">blockMaxLen</span> <span class="o">=</span> <span class="n">blockLen</span> <span class="o">-</span> <span class="mi">11</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">SecPadding</span><span class="p">.</span><span class="nl">OAEP:</span>
</span><span class='line'>        <span class="n">blockMaxLen</span> <span class="o">=</span> <span class="n">blockLen</span> <span class="o">-</span> <span class="mi">42</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="s">&quot;blockMaxLen == blockLen&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">totalLen</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">curDataLen</span> <span class="o">=</span> <span class="n">totalLen</span> <span class="o">-</span> <span class="n">index</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">curDataLen</span>  <span class="o">&gt;</span> <span class="n">blockMaxLen</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">curDataLen</span> <span class="o">=</span> <span class="n">blockMaxLen</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="nl">curData:</span> <span class="n">NSData</span> <span class="o">=</span> <span class="p">(</span><span class="n">data</span><span class="p">.</span><span class="n">subdata</span><span class="p">(</span><span class="nl">with:</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">curDataLen</span><span class="p">))</span> <span class="n">as</span> <span class="n">NSData</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="nl">status:</span> <span class="n">OSStatus</span> <span class="o">=</span> <span class="n">SecKeyEncrypt</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">publicSecKey</span><span class="o">!</span><span class="p">,</span> <span class="n">SecPadding</span><span class="p">.</span><span class="n">OAEP</span><span class="p">,</span> <span class="n">curData</span><span class="p">.</span><span class="n">bytes</span><span class="p">.</span><span class="n">assumingMemoryBound</span><span class="p">(</span><span class="nl">to:</span> <span class="n">UInt8</span><span class="p">.</span><span class="n">self</span><span class="p">),</span> <span class="n">curData</span><span class="p">.</span><span class="n">length</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">outBuf</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">outBufLen</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="n">noErr</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">resData</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">outBuf</span><span class="p">,</span> <span class="nl">length:</span> <span class="n">outBufLen</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="s">&quot;encrypt status = \(status)&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">index</span> <span class="o">+=</span> <span class="n">curDataLen</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//base64 encode</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">resData</span><span class="p">.</span><span class="n">base64EncodedString</span><span class="p">(</span><span class="nl">options:</span> <span class="n">NSData</span><span class="p">.</span><span class="n">Base64EncodingOptions</span><span class="p">(</span><span class="nl">rawValue:</span> <span class="n">NSData</span><span class="p">.</span><span class="n">Base64EncodingOptions</span><span class="p">.</span><span class="n">lineLength64Characters</span><span class="p">.</span><span class="n">rawValue</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>2.RSA解密</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="err">@</span><span class="n">objc</span> <span class="n">public</span> <span class="n">func</span> <span class="n">decrypt</span><span class="p">(</span><span class="nl">source:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">padding:</span> <span class="n">SecPadding</span> <span class="o">=</span> <span class="n">SecPadding</span><span class="p">.</span><span class="n">PKCS1</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">source</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">self</span><span class="p">.</span><span class="n">privateSecKey</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//base64 decode</span>
</span><span class='line'>        <span class="n">let</span> <span class="nl">data:</span> <span class="n">Data</span> <span class="o">=</span> <span class="p">(</span><span class="n">NSData</span><span class="p">(</span><span class="nl">base64Encoded:</span> <span class="p">(</span><span class="n">source</span> <span class="n">as</span> <span class="n">String</span><span class="p">),</span> <span class="nl">options:</span> <span class="n">NSData</span><span class="p">.</span><span class="n">Base64DecodingOptions</span><span class="p">.</span><span class="n">ignoreUnknownCharacters</span><span class="p">)</span><span class="o">!</span> <span class="n">as</span> <span class="n">Data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">blockLen</span> <span class="o">=</span>  <span class="n">SecKeyGetBlockSize</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">privateSecKey</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">outBuf</span> <span class="o">=</span> <span class="n">UnsafeMutablePointer</span><span class="o">&lt;</span><span class="n">UInt8</span><span class="o">&gt;</span><span class="p">.</span><span class="n">allocate</span><span class="p">(</span><span class="nl">capacity:</span> <span class="n">blockLen</span><span class="p">)</span>
</span><span class='line'>        <span class="n">defer</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">outBuf</span><span class="p">.</span><span class="n">deallocate</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">outBufLen:</span> <span class="n">Int</span> <span class="o">=</span> <span class="n">blockLen</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//        if #available(iOS 10.0, *) {</span>
</span><span class='line'><span class="c1">//            var error: Unmanaged&lt;CFError&gt;?</span>
</span><span class='line'><span class="c1">//            resData =  SecKeyCreateDecryptedData(self.privateSecKey!, SecKeyAlgorithm.rsaEncryptionPKCS1, data as CFData, &amp;error)</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//            print(&quot;res = \(String(describing: error?.takeUnretainedValue().localizedDescription))&quot;)</span>
</span><span class='line'><span class="c1">//        } else {</span>
</span><span class='line'><span class="c1">//            // Fallback on earlier versions</span>
</span><span class='line'><span class="c1">//            //let status = SecKeyEncrypt(seckey, SecPadding.PKCS1, chunkData, chunkData.count, outBuf, &amp;encryptedDataLength)</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//        }</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">totalLen</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">count</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">resData</span> <span class="o">=</span> <span class="n">NSMutableData</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">while</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">totalLen</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">curDataLen</span> <span class="o">=</span> <span class="n">totalLen</span> <span class="o">-</span> <span class="n">index</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">curDataLen</span>  <span class="o">&gt;</span> <span class="n">blockLen</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">curDataLen</span> <span class="o">=</span> <span class="n">blockLen</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">let</span> <span class="nl">curData:</span> <span class="n">Data</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">subdata</span><span class="p">(</span><span class="k">in</span><span class="o">:</span> <span class="n">index</span> <span class="p">..</span><span class="o">&lt;</span> <span class="n">index</span> <span class="o">+</span> <span class="n">curDataLen</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">var</span> <span class="nl">status:</span><span class="n">OSStatus</span> <span class="o">=</span> <span class="n">noErr</span>
</span><span class='line'>            <span class="n">curData</span><span class="p">.</span><span class="n">withUnsafeBytes</span> <span class="p">{</span> <span class="p">(</span><span class="nl">bytes:</span> <span class="n">UnsafePointer</span><span class="o">&lt;</span><span class="n">UInt8</span><span class="o">&gt;</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>                 <span class="n">status</span> <span class="o">=</span> <span class="n">SecKeyDecrypt</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">privateSecKey</span><span class="o">!</span><span class="p">,</span> <span class="n">padding</span><span class="p">,</span> <span class="n">bytes</span><span class="p">,</span> <span class="n">curData</span><span class="p">.</span><span class="n">count</span><span class="p">,</span> <span class="n">outBuf</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">outBufLen</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="n">noErr</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">resData</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">outBuf</span><span class="p">,</span> <span class="nl">length:</span> <span class="n">outBufLen</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>                <span class="n">print</span><span class="p">(</span><span class="s">&quot;decrypt status = \(status)&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">index</span> <span class="o">+=</span> <span class="n">curDataLen</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">String</span><span class="p">(</span><span class="nl">data:</span> <span class="p">(</span><span class="n">resData</span> <span class="n">as</span> <span class="n">Data</span><span class="p">),</span> <span class="nl">encoding:</span> <span class="n">String</span><span class="p">.</span><span class="n">Encoding</span><span class="p">.</span><span class="n">utf8</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>3.注意事项</h5>

<ul>
<li>1.rsa加解密方式要一致，默认是<code>SecPadding.PKCS1</code>模式。</li>
<li>2.rsa不同加密模式，会影响数据分块大小。

<ul>
<li><code>PKCS1</code>模式时：数据块长度最大为块长度-<code>11</code></li>
<li><code>OAEP</code>模式时，数据块长度最大为块长度-<code>42</code></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swift-class与struct区别]]></title>
    <link href="http://ksnowlv.github.io/blog/2018/07/18/swift-classyu-structqu-bie/"/>
    <updated>2018-07-18T18:45:00+08:00</updated>
    <id>http://ksnowlv.github.io/blog/2018/07/18/swift-classyu-structqu-bie</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th></th>
<th>比较项</th>
<th>struct</th>
<th>class</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> 类型</td>
<td>值类型</td>
<td>引用类型|</td>
</tr>
<tr>
<td></td>
<td> 属性初始化</td>
<td>可用默认构造直接初始化</td>
<td>需要自己创建构造方法|</td>
</tr>
<tr>
<td></td>
<td>变量赋值</td>
<td>深拷贝</td>
<td>浅拷贝，增加原对象引用</td>
</tr>
<tr>
<td></td>
<td>方法中修改属性</td>
<td>需要添加mutating </td>
<td>不需要</td>
</tr>
<tr>
<td></td>
<td>继承关系</td>
<td>不能继承</td>
<td>可以继承</td>
</tr>
<tr>
<td></td>
<td>内存</td>
<td>栈上，自动内存管理</td>
<td>堆上，手动内存管理</td>
</tr>
<tr>
<td></td>
<td>速度</td>
<td>高效</td>
<td>相比效率低</td>
</tr>
<tr>
<td></td>
<td>线程安全</td>
<td>自动线程安全的</td>
<td>大多是非线程安全的</td>
</tr>
<tr>
<td></td>
<td>与oc混编</td>
<td>不支持，oc无法调struct</td>
<td>支持混编</td>
</tr>
<tr>
<td></td>
<td>序列化</td>
<td>不支持，可用字节转NSData</td>
<td>支持序列化</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
</feed>
