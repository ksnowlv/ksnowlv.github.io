<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on ksnowlv技术笔记</title>
    <link>https://ksnowlv.github.io/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on ksnowlv技术笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 14 Dec 2023 19:25:36 +0800</lastBuildDate><atom:link href="https://ksnowlv.github.io/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Libcurl的简单使用</title>
      <link>https://ksnowlv.github.io/post/libcurl%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 14 Dec 2023 19:25:36 +0800</pubDate>
      
      <guid>https://ksnowlv.github.io/post/libcurl%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Java调用C&#43;&#43;</title>
      <link>https://ksnowlv.github.io/post/2019-04-22-androidtong-guo-jnijian-jie-diao-yong-c-plus-plus/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2019-04-22-androidtong-guo-jnijian-jie-diao-yong-c-plus-plus/</guid>
      <description>本篇重点内容，C如何调用C++类，思路是JAVA通过JNI直接调用C，C调用C++相关的类。 1.JAVA层接口Person类相关接口 1 2 3 4</description>
    </item>
    
    <item>
      <title>C&#43;&#43;多态性</title>
      <link>https://ksnowlv.github.io/post/2013-05-15-c-plus-plus-duo-tai-xing/</link>
      <pubDate>Wed, 15 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2013-05-15-c-plus-plus-duo-tai-xing/</guid>
      <description>多态性含义 同一个函数可以有不同的语义。相同的消息被不同对象接收时导致完全不同的行为。 面向对象语言的多态性 1.重载多态， 2.强制多态， 3.包含</description>
    </item>
    
    <item>
      <title>二维数组的创建释放</title>
      <link>https://ksnowlv.github.io/post/2013-05-10-er-wei-shu-zu-de-chuang-jian-shi-fang/</link>
      <pubDate>Fri, 10 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2013-05-10-er-wei-shu-zu-de-chuang-jian-shi-fang/</guid>
      <description>1.二维数据创建及释放 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 template&amp;lt;class T&amp;gt; void CreateArray(T** &amp;amp;aArray, const int aRow,const int aCol) { T** aArray = new T*[aRow]; for (int i = 0; i &amp;lt; aRow; ++i) { aArray[i] = new T[aCol]; } } template&amp;lt;class T&amp;gt; void ReleaseArray(T** &amp;amp;aArray, const</description>
    </item>
    
  </channel>
</rss>
