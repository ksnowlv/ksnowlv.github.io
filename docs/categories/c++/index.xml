<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on ksnowlv技术笔记</title>
    <link>https://ksnowlv.github.io/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on ksnowlv技术笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 15 May 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://ksnowlv.github.io/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;多态性</title>
      <link>https://ksnowlv.github.io/post/2013-05-15-c-plus-plus-duo-tai-xing/</link>
      <pubDate>Wed, 15 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2013-05-15-c-plus-plus-duo-tai-xing/</guid>
      <description>多态性含义* 同一个函数可以有不同的语义。相同的消息被不同对象接收时导致完全不同的行为。 面向对象语言的多态性 1.重载多态， 2.强制多态， 3.包</description>
    </item>
    
    <item>
      <title>二维数组的创建释放</title>
      <link>https://ksnowlv.github.io/post/2013-05-10-er-wei-shu-zu-de-chuang-jian-shi-fang/</link>
      <pubDate>Fri, 10 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2013-05-10-er-wei-shu-zu-de-chuang-jian-shi-fang/</guid>
      <description>template&amp;lt;class T&amp;gt; void CreateArray(T** &amp;amp;aArray, const int aRow,const int aCol) { T** aArray = new T*[aRow]; for (int i = 0; i &amp;lt; aRow; ++i) { aArray[i] = new T[aCol]; } } template&amp;lt;class T&amp;gt; void ReleaseArray(T** &amp;amp;aArray, const int aRow,const int aCol) { for (int i = aRow - 1; i &amp;gt;= 0; --i) { delete [] aArray[i]; } delete[] aArray; aArray = NULL; } 记得两年前</description>
    </item>
    
  </channel>
</rss>
