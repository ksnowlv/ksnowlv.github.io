<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>其它 on ksnowlv技术笔记</title>
    <link>https://ksnowlv.github.io/categories/%E5%85%B6%E5%AE%83/</link>
    <description>Recent content in 其它 on ksnowlv技术笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 05 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://ksnowlv.github.io/categories/%E5%85%B6%E5%AE%83/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>300指数量化基金</title>
      <link>https://ksnowlv.github.io/post/2019-04-05-you-xiu-de-liang-hua-ji-jin/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2019-04-05-you-xiu-de-liang-hua-ji-jin/</guid>
      <description>1.2019年定投基金 基金代码 简称 2016超越沪深300指数% 2017超越300指数% 2018超越300指数% 3年平均收益率% 基金规模 管理托</description>
    </item>
    
    <item>
      <title>直播协议对比</title>
      <link>https://ksnowlv.github.io/post/2018-07-23-zhi-bo-xie-yi-dui-bi/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2018-07-23-zhi-bo-xie-yi-dui-bi/</guid>
      <description>直播协议 优势 劣势 RTP /RTCP RTP 实行有序传送,RTP中的序列号允许接收方重组发送方的包序列，同时序列号也能用于决定适当的包位置，如在视频解码中，就不需</description>
    </item>
    
    <item>
      <title>axure之中继器</title>
      <link>https://ksnowlv.github.io/post/2014-11-10-axure-zhi-zhong-ji-qi/</link>
      <pubDate>Mon, 10 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2014-11-10-axure-zhi-zhong-ji-qi/</guid>
      <description>axure中继器，可以添加/移除/更新中继器的项目。 我们制作一个demo，效果如下： 制作使用中继器的主界面 制作使用中继器的项 源文件见axur</description>
    </item>
    
    <item>
      <title>axure之动态面板</title>
      <link>https://ksnowlv.github.io/post/2014-11-06-axure-zhi-dong-tai-mian-ban/</link>
      <pubDate>Thu, 06 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2014-11-06-axure-zhi-dong-tai-mian-ban/</guid>
      <description>&lt;h3 id=&#34;axure动态面板----一个可以在层或状态中装有其他部件的容器可以包含一个或多个状态并且每个状态中可以包含多个部件&#34;&gt;axure动态面板    一个可以在层或状态中装有其他部件的容器.可以包含一个或多个状态，并且每个状态中可以包含多个部件.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;一个动态面板状态只能在同一时间看到一次.使用交互你可以隐藏/显示动态面板及设置当前动态面板状态的可见性.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Charles截包工具</title>
      <link>https://ksnowlv.github.io/post/2014-09-10-charles-jie-bao-gong-ju/</link>
      <pubDate>Wed, 10 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2014-09-10-charles-jie-bao-gong-ju/</guid>
      <description>Charles 是一款Mac上好用的截包工具,可以让开发者查看所有连接互联网的HTTP通信，包括请求，响应和HTTP头信息等等,非常不错!</description>
    </item>
    
    <item>
      <title>symbian-gzip解压缩</title>
      <link>https://ksnowlv.github.io/post/2013-04-11-symbian-gzipjie-ya-suo/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2013-04-11-symbian-gzipjie-ya-suo/</guid>
      <description>gbk数据解压缩转成Unicode编码数据 const TBool GBKCompressToUnicodeL(const TDesC8&amp;amp; aGBKData,RBuf&amp;amp; aUnicodeData) { z_stream stream; memset(&amp;amp;stream, 0, sizeof(z_stream)); const uInt inputBufLen = aGBKData.Length() + 1; stream.avail_in = inputBufLen; stream.next_in = (Bytef*)aGBKData.Ptr(); TInt res = inflateInit(&amp;amp;stream); TBool isUncompressOK = EFalse ; RBuf8 gbkUncompressData; CleanupClosePushL(gbkUncompressData); gbkUncompressData.Create((inputBufLen&amp;lt;&amp;lt;3)); gbkUncompressData.Zero(); if ( res == Z_OK) { TInt pakLen = 256;</description>
    </item>
    
  </channel>
</rss>
