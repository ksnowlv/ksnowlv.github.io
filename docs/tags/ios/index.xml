<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS on ksnowlv技术笔记</title>
    <link>https://ksnowlv.github.io/tags/ios/</link>
    <description>Recent content in iOS on ksnowlv技术笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 26 Jun 2023 13:53:02 +1300</lastBuildDate><atom:link href="https://ksnowlv.github.io/tags/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Swift预编译宏添加</title>
      <link>https://ksnowlv.github.io/post/swift%E9%A2%84%E7%BC%96%E8%AF%91%E5%AE%8F%E6%B7%BB%E5%8A%A0/</link>
      <pubDate>Mon, 26 Jun 2023 13:53:02 +1300</pubDate>
      
      <guid>https://ksnowlv.github.io/post/swift%E9%A2%84%E7%BC%96%E8%AF%91%E5%AE%8F%E6%B7%BB%E5%8A%A0/</guid>
      <description>&lt;h3 id=&#34;1swift预编译宏添加&#34;&gt;1.swift预编译宏添加&lt;/h3&gt;
&lt;p&gt;在Xcode中，项目的build Settings，搜索 Swift Compiler，选择Other Swift Flags，添加环境变量。注意添加 -D参数.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Swift代码风格检查利器SwiftLint的使用</title>
      <link>https://ksnowlv.github.io/post/swift%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E6%A3%80%E6%9F%A5%E5%88%A9%E5%99%A8swiftlint%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 30 Jul 2021 21:09:40 +0800</pubDate>
      
      <guid>https://ksnowlv.github.io/post/swift%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E6%A3%80%E6%9F%A5%E5%88%A9%E5%99%A8swiftlint%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h2 id=&#34;代码检查利器swiftlint&#34;&gt;代码检查利器SwiftLint&lt;/h2&gt;
&lt;p&gt;如何使用工具检查swift代码风格？可以使用SwiftLint ,见链接https://github.com/realm/SwiftLint&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Swift中DispatchGroup之管理异步任务</title>
      <link>https://ksnowlv.github.io/post/swift%E4%B8%ADdispatchgroup%E4%B9%8B%E7%AE%A1%E7%90%86%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1/</link>
      <pubDate>Sun, 13 Jun 2021 18:03:47 +0800</pubDate>
      
      <guid>https://ksnowlv.github.io/post/swift%E4%B8%ADdispatchgroup%E4%B9%8B%E7%AE%A1%E7%90%86%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Swift与Objective-C混编swift代码体积优化</title>
      <link>https://ksnowlv.github.io/post/swift-objective-c%E6%B7%B7%E7%BC%96swift%E4%BB%A3%E7%A0%81%E4%BD%93%E7%A7%AF%E4%BC%98%E5%8C%96/</link>
      <pubDate>Wed, 14 Apr 2021 19:46:06 +0800</pubDate>
      
      <guid>https://ksnowlv.github.io/post/swift-objective-c%E6%B7%B7%E7%BC%96swift%E4%BB%A3%E7%A0%81%E4%BD%93%E7%A7%AF%E4%BC%98%E5%8C%96/</guid>
      <description>&lt;h2 id=&#34;一swift与objective-c混编下减小包大小&#34;&gt;一.swift与Objective-c混编下减小包大小&lt;/h2&gt;
&lt;p&gt;在Swift&amp;amp;Objective-c混编优化下，如何进一步减小代码体积大小？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS视频播放-AVPlayerViewController</title>
      <link>https://ksnowlv.github.io/post/ios-video-play-avplayerviewcontroller/</link>
      <pubDate>Wed, 25 Dec 2019 20:37:53 +0800</pubDate>
      
      <guid>https://ksnowlv.github.io/post/ios-video-play-avplayerviewcontroller/</guid>
      <description></description>
    </item>
    
    <item>
      <title>iOS视频播放-AVPlayer和AVPlayerLayer</title>
      <link>https://ksnowlv.github.io/post/2019-11-26-iosshi-pin-bo-fang-avplayer/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2019-11-26-iosshi-pin-bo-fang-avplayer/</guid>
      <description>本文计划使用AVPlayer和AVPlayerLayer播放视频，视频格式如下： m4v:MP4的特殊类型，MP4格式的高清；可包含字幕 mp4</description>
    </item>
    
    <item>
      <title>XCode使用PMD扫描重复代码（一）</title>
      <link>https://ksnowlv.github.io/post/2019-08-19-xcodeshi-yong-pmdsao-miao-zhong-fu-dai-ma/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2019-08-19-xcodeshi-yong-pmdsao-miao-zhong-fu-dai-ma/</guid>
      <description>如何使用PMD在XCode下扫描重复代码（Copy&amp;amp;Past）呢？ 1.下载PMD https://pmd.github.io，放置到工</description>
    </item>
    
    <item>
      <title>swift泛型</title>
      <link>https://ksnowlv.github.io/post/2019-05-16-swiftfan-xing/</link>
      <pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2019-05-16-swiftfan-xing/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /// 交换两个对象的值 /// /// - Parameters: /// - aValue: 对象a /// - bValue: 对象b func swapValues&amp;lt;T&amp;gt;(_ aValue: inout T, _ bValue: inout T)</description>
    </item>
    
    <item>
      <title>iOS指针集合类</title>
      <link>https://ksnowlv.github.io/post/2018-04-23-ioszhi-zhen-ji-he-lei/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2018-04-23-ioszhi-zhen-ji-he-lei/</guid>
      <description>Collections之Pointer Collections ：指针集合类 NSPointerArray NSHashTable NSMapTable 1.NSPointerFunctionsOptionsDefines the memory and personality options for an NSPointerFunctions object. NSPointerFunctionsMachVirtualMemory NSPointerFunctionsMallocMemory Use free() on removal, calloc() on copy in. NSPointerFunctionsOpaqueMemory NSPointerFunctionsStrongMemory NSPointerFunctionsWeakMemory Uses weak read and write barriers appropriate for ARC or GC. Using NSPointerFunctionsWeakMemory object references will turn to</description>
    </item>
    
    <item>
      <title>苹果开发者账号id绑定手机号</title>
      <link>https://ksnowlv.github.io/post/2018-04-17-ping-guo-kai-fa-zhe-zhang-hao-idbang-ding-shou-ji-hao/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2018-04-17-ping-guo-kai-fa-zhe-zhang-hao-idbang-ding-shou-ji-hao/</guid>
      <description>问题 最近苹果开发者账号提醒 &amp;ldquo;The Apple Developer Program License Agreement has been updated&amp;rdquo; 内容如下： In order to access certain membership resources, you must accept the latest license agreement. First, you’ll need to update the mobile phone number associated with your Apple ID. Your mobile phone number must be based in your country/region.</description>
    </item>
    
    <item>
      <title>iOS之url编解码</title>
      <link>https://ksnowlv.github.io/post/2017-12-15-ioszhi-urlbian-jie-ma/</link>
      <pubDate>Fri, 15 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2017-12-15-ioszhi-urlbian-jie-ma/</guid>
      <description>iOS 开发中，经常需要对url编码与解码。 iOS9之前 1.url编码 1 2 3 4 5 6 7 8 9 10 11 12 + (NSString*)encodeUrl:(NSString *)urlString { if (0 == urlString.length) { return KBlankString; } return (__bridge_transfer NSString*) CFURLCreateStringByAddingPercentEscapes(kCFAllocatorDefault, (CFStringRef)urlString, NULL, (CFStringRef)@&amp;#34;!*&amp;#39;();:@&amp;amp;=+$,/?%#[]&amp;#34;, kCFStringEncodingUTF8); } 2.url</description>
    </item>
    
    <item>
      <title>FaceBook-infer的使用</title>
      <link>https://ksnowlv.github.io/post/2015-08-19-facebook-infer-de-shi-yong/</link>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2015-08-19-facebook-infer-de-shi-yong/</guid>
      <description>Facebook推出潜在一款bug扫描工具(http://fbinfer.com)，可以检查 iOS/Android App. MAC上的安装 一.环境要求 1.Python版</description>
    </item>
    
    <item>
      <title>iOS有限后台任务</title>
      <link>https://ksnowlv.github.io/post/2015-08-19-ios-you-xian-hou-tai-ren-wu/</link>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2015-08-19-ios-you-xian-hou-tai-ren-wu/</guid>
      <description>iOS下有限后台任务如何使用呢？ iOS应用，在切换到后台时，可以开启有限后台任务。 见苹果开发文档， 一.几个相关方法 1.beginBackgroundTaskWithExpirationHandler 2.beginBackgroundTaskWithName:expirationHandler 3.endBackgroundTask 4.setMinimumBackgroundFetchInterval 二.切换到后台的处</description>
    </item>
    
    <item>
      <title>iOS-lua打补丁</title>
      <link>https://ksnowlv.github.io/post/2015-08-10-ios-luada-bu-ding/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2015-08-10-ios-luada-bu-ding/</guid>
      <description>一.目的 1.更改线上App小的功能 2.修复线上App的Bug 3.对于iOS来讲，避免了漫长的AppStore审核 二.技术方案 三.相关接口 loadPatch 参</description>
    </item>
    
    <item>
      <title>iOS-64位适配</title>
      <link>https://ksnowlv.github.io/post/2015-01-06-ios-64wei-gua-pei/</link>
      <pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2015-01-06-ios-64wei-gua-pei/</guid>
      <description>请参考苹果文档链接：https://developer.apple.com/library/ios/documentation/Genera</description>
    </item>
    
    <item>
      <title>阻止文件被iTunes和iCloud同步</title>
      <link>https://ksnowlv.github.io/post/2014-12-03-zu-zhi-wen-jian-bei-ituneshe-icloudtong-bu/</link>
      <pubDate>Wed, 03 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2014-12-03-zu-zhi-wen-jian-bei-ituneshe-icloudtong-bu/</guid>
      <description>1.参考官方文档 How do I prevent files from being backed up to iCloud and iTunes? 2.示例代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 + (BOOL)addSkipBackupAttributeToItemAtPath:(NSString *)path { BOOL success = NO; const char *filePath</description>
    </item>
    
    <item>
      <title>ZLib与GZip解压缩对比</title>
      <link>https://ksnowlv.github.io/post/2014-12-02-zlibyu-gzip-jie-ya-suo-dui-bi/</link>
      <pubDate>Tue, 02 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2014-12-02-zlibyu-gzip-jie-ya-suo-dui-bi/</guid>
      <description>一.ZLib与GZip解压缩 ZLib库默认解压缩方法，并非GZip解压缩，而是ZLib的。 zlib(RFC1950):一种格式，是对defl</description>
    </item>
    
    <item>
      <title>iOS使用OpenSSL</title>
      <link>https://ksnowlv.github.io/post/2014-11-18-ios-shi-yong-openssl/</link>
      <pubDate>Tue, 18 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2014-11-18-ios-shi-yong-openssl/</guid>
      <description>iOS中OpenSSL If your app depends on OpenSSL,you should compile OpenSSL yourself and statically link a known version of OpenSSL into your app. This use of OpenSSL is possible on both OS X and iOS. However, unless you are trying to maintain source compatibility with an existing open source project, you should generally use a different API. 苹果建议</description>
    </item>
    
    <item>
      <title>给iOS应用打补丁</title>
      <link>https://ksnowlv.github.io/post/2014-11-13-gei-iosying-yong-da-bu-ding/</link>
      <pubDate>Thu, 13 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2014-11-13-gei-iosying-yong-da-bu-ding/</guid>
      <description>一.问题 当iOS App出现bug时，由于不能很快上架，如何紧急修复bug呢？ 二.解决方案 可以通过Lua给app打补丁。 将脚本放到后台服务器，</description>
    </item>
    
    <item>
      <title>iOS之Keychain</title>
      <link>https://ksnowlv.github.io/post/2014-10-22-ios-zhi-keychain/</link>
      <pubDate>Wed, 22 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2014-10-22-ios-zhi-keychain/</guid>
      <description>一.iOS之Keychain用途 提供了一种安全的保存私密信息的方式，每个ios程序都有一个独立的keychain存储,它保存的信息不会因Ap</description>
    </item>
    
  </channel>
</rss>
