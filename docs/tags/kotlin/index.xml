<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kotlin on ksnowlv技术笔记</title>
    <link>https://ksnowlv.github.io/tags/kotlin/</link>
    <description>Recent content in Kotlin on ksnowlv技术笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 19 Dec 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://ksnowlv.github.io/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kotlin下的单例</title>
      <link>https://ksnowlv.github.io/post/2017-12-19-kotlinxia-de-dan-li/</link>
      <pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ksnowlv.github.io/post/2017-12-19-kotlinxia-de-dan-li/</guid>
      <description>单例不同的语言下的要求大体一致。 Kotlin下的单例是通过companion实现的。 class KCacheMgr private constructor (){ companion object { @Volatile var sharedCacheMgr: KCacheMgr? = null fun getInstance(): KCacheMgr { if (sharedCacheMgr == null) { synchronized(KCacheMgr::class) { if (sharedCacheMgr ==</description>
    </item>
    
  </channel>
</rss>
